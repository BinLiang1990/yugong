{"version":3,"sources":["components/MiniDashboard/EventsSetting/EventsSetting.module.less","components/MiniDashboard/Presetting/Presetting.module.less","components/MiniDashboard/MarkdownModalDoc/MarkdownModalDoc.module.less","components/MiniDashboard/Dashboard/Dashboard.module.less","components/MiniDashboard/StyleController/StyleController.module.less","components/MiniDashboard/Display/Display.module.scss","components/MiniDashboard/NumberInput/NumberInput.module.scss","components/MiniDashboard/Spacing/Spacing.module.less","components/MiniDashboard/Font/Font.module.scss","components/MiniDashboard/StyleSheetPanel/StyleSheetPanel.module.scss","components/MiniDashboard/Shadow/Shadow.module.scss","components/MiniDashboard/Shadow/ShadowItem/ShadowItem.module.less","components/MiniDashboard/Shadow/ShadowListHoc/ShadowListHoc.module.less","components/MiniDashboard/Border/Select/Select.module.less","components/MiniDashboard/Border/Border.module.less","components/MiniDashboard/Border/BorderCheckbox/BorderCheckbox.module.less","components/MiniDashboard/Border/BorderRadius/BorderRadius.module.less","components/MiniDashboard/Transfrom/Transfrom.module.scss","components/MiniDashboard/CodeEditor/CodeEditor.module.less","hooks/useMergeAppData.ts","components/MiniDashboard/ApiSetting/index.ts","components/MiniDashboard/ApiSetting/ApiSetting.tsx","components/MiniDashboard/EventsSetting/index.ts","components/MiniDashboard/EventsSetting/EventsSetting.tsx","components/MiniDashboard/Presetting/index.ts","components/MiniDashboard/Presetting/Presetting.tsx","components/MiniDashboard/MarkdownModalDoc/index.ts","components/MiniDashboard/MarkdownModalDoc/MarkdownModalDoc.tsx","components/MiniDashboard/ConfigurationController/ConfigurationController.tsx","components/MiniDashboard/ConfigurationController/index.ts","components/MiniDashboard/NumberInput/index.ts","components/MiniDashboard/NumberInput/NumberInput.tsx","components/MiniDashboard/Spacing/Spacing.tsx","components/MiniDashboard/Spacing/index.ts","components/MiniDashboard/Display/index.ts","components/MiniDashboard/Display/Display.tsx","components/MiniDashboard/Font/index.ts","components/MiniDashboard/Font/Font.tsx","components/MiniDashboard/Shadow/ShadowItem/MoveIcon.tsx","components/MiniDashboard/Shadow/ShadowItem/ShadowItem.tsx","components/MiniDashboard/Shadow/ShadowItem/index.ts","components/MiniDashboard/Shadow/ShadowListHoc/index.ts","components/MiniDashboard/Shadow/ShadowListHoc/ShadowListHoc.tsx","components/MiniDashboard/Shadow/index.ts","components/MiniDashboard/Shadow/Shadow.tsx","components/MiniDashboard/Border/Select/index.ts","components/MiniDashboard/Border/Select/Select.tsx","components/MiniDashboard/Border/BorderCheckbox/index.ts","components/MiniDashboard/Border/BorderCheckbox/BorderCheckbox.tsx","components/MiniDashboard/Border/BorderRadius/index.ts","components/MiniDashboard/Border/BorderRadius/BorderRadius.tsx","components/MiniDashboard/Border/index.ts","components/MiniDashboard/Border/Border.tsx","components/MiniDashboard/Transfrom/index.ts","components/MiniDashboard/Transfrom/Transfrom.tsx","components/MiniDashboard/StyleSheetPanel/StyleSheetPanel.tsx","components/MiniDashboard/StyleSheetPanel/index.ts","components/MiniDashboard/StyleController/StyleController.tsx","components/MiniDashboard/StyleController/index.ts","components/MiniDashboard/StyleController/helper.ts","components/MiniDashboard/CodeEditor/index.ts","components/MiniDashboard/CodeEditor/CodeEditor.tsx","components/MiniDashboard/Dashboard/Dashboard.tsx","components/MiniDashboard/Dashboard/index.ts"],"names":["module","exports","useMergeAppData","updateAppData","useDispatch","appData","updateActivationItem","activationItem","useSelector","state","nextAppData","cloneDeep","nextActivationItem","useLocalStorage","setLocalStorage","useCallback","data","path","set","result","map","item","moduleId","ApiSetting","api","type","getDefaultApiData","defaultData","require","default","exposeApi","optApi","element","current","find","apiId","optElememts","updateAppdata","onChangeApi","ApiConfig","apiData","defaultApiData","onChange","EventsSetting","sendMessage","usePostMessage","events","update","onChangeEventGroup","name","getCurentEventByEventName","eventName","Object","prototype","toString","call","onPlay","curentEventInfomation","win","document","getElementById","contentWindow","tag","value","event","args","exposeEvents","length","className","s","root","EventGroup","Presetting","dispatch","runningTimes","updateActDataToAll","actData","operateData","useMemo","setFunctions","mount","exposeFunctions","description","runningData","copyExposeFunctions","filter","presettable","copySetFunctions","staticItem","reverse","some","setItem","split","Array","isArray","arguments","getData","index","argIndex","copyRunningData","readyToSetting","forEach","deepEqual","push","copyModuleData","readyItem","isCove","mountItem","unshift","title","argItem","row","gutter","span","label","placement","parse","describe","e","target","placeholder","suffix","html","HtmlSuffix","select","showSearch","optionFilterProp","filterOption","input","option","children","join","toLowerCase","indexOf","keys","Option","ArrayArguments","typeArguments","flexible","htmlInput","BooleanArguments","ObjectArguments","MixedArguments","MarkdownModalDoc","visible","moduleName","onCancel","useMarked","helper","setHelper","getMd","a","text","file","fetch","response","console","warn","useEffect","width","footer","bodyStyle","padding","mdwrap","Panel","ConfigurationController","useState","showHelp","setShowHelp","handlerHelp","stopPropagation","accordion","bordered","defaultActiveKey","header","extra","onClick","ExceptionOutlined","InfoCircleOutlined","NumberInput","unit","defaultValue","other","ref","useRef","blur","onDebounce","setOnDebounce","onFocus","onBlur","setValue","refChange","useSafeCallback","onChangeDebounce","throttle","log","onChangeValue","defaultVal","undefined","Spacing","margin","spaceType","setSpaceType","inValues","setInValues","outValues","setOutValues","locked","setLocked","values","getValue","onChangeType","onToggleLocker","setLabel","orientation","divide","boxA","style","backgroundColor","boxB","middle","LinkOutlined","wrapper","unititem","Display","displayData","setDisplayData","height","zIndex","position","left","right","top","bottom","display","overflow","boxSizing","pointerEvents","onChangeDisplay","Function","onChangeSpace","onChangeOption","oprateData","min","optionsData","block","inline","none","hidden","scroll","auto","placehold","max","absolute","relative","Font","fontData","setFontData","fontSize","align","lineHeight","letterSP","fontWeight","fontStyle","color","decoration","onChangeFont","checked","rgb","r","g","b","Group","Button","AlignLeftOutlined","AlignCenterOutlined","AlignRightOutlined","UnderlineOutlined","StrikethroughOutlined","Checkbox","BoldOutlined","ItalicOutlined","Color","defaultColor","MoveIcon","viewBox","xmlns","d","DragHandle","SortableHandle","icon","ShadowItem","SortableElement","onMinus","onChangeColor","onToggleShow","onChangeInset","onChangeshiftRight","onChangeshiftDown","onChangeBlur","onChangeSpread","classNames","shadowwrap","menu","size","MinusOutlined","hiddenItem","content","textAlign","checkedChildren","unCheckedChildren","inset","shiftRight","shiftDown","spread","ShadowListHoc","SortableContainer","wrap","i","Shadow","shadowType","setShadowType","textShadowList","setTextShadowList","boxShadowList","setBoxShadowList","onChangeShadowTab","onChangeShadow","onPlus","res","onSortEnd","oldIndex","newIndex","arrayMove","tab","PlusOutlined","useDragHandle","renderShadow","Select","key","example","borderTop","BorderCheckbox","borderRight","borderBottom","borderLeft","border","borderPosition","setBorderPosition","handleBorderPosition","prop","includes","BorderOutlined","BorderTopOutlined","BorderRightOutlined","BorderBottomOutlined","BorderLeftOutlined","BorderRadius","topLeft","setTopLeft","topRight","setTopRight","bottomRight","setBottomRight","bottomLeft","setBottomLeft","toggleLocked","onChangeAll","updateChange","onChangeData","alignright","RadiusUpleftOutlined","RadiusBottomleftOutlined","RadiusUprightOutlined","RadiusBottomrightOutlined","Border","defaultDate","setBorder","onChangeBorder","radiusTopLeft","radiusTopRight","radiusBottomRight","radiusBottomLeft","rgba","borderColor","borderStyle","solid","dotted","dashed","double","groove","ridge","outset","borderWidth","Transfrom","transfrom","setTransfrom","onChangeTransFrom","scale","rotate","translateX","translateY","skewX","skewY","StyleSheetPanel","selected","pageData","rootStyle","onChangeBackgroundGroup","onChangeTransfrom","font","BackgroundGroup","updateKey","backgroundGroup","textShadow","boxShadow","transform","StyleController","sendMsg","moduleType","exposeDefaultProps","styleDescription","stylePath","setStylePath","setPath","resetPath","pathData","onSelectStylePath","sel","loop","findPath","window","innerHeight","dashboardstylewrap","bar","dropdownStyle","maxHeight","listHeight","treeData","treeDefaultExpandAll","CodeEditor","jsonData","setJsonData","jsonMode","setJsonMode","jsoneditor","container","onsubmit","json","get","layout","controller","forceUpdateByStateTag","JSONEditor","mode","mainMenuBar","destroy","onChangeJsonMode","setMode","toolbar","modeid","JSON","stringify","onCopy","message","info","CopyOutlined","alt","confirm","Dashboard","showCopyedModal","setShowCopyedModal","newModalName","setNewModalName","showRunningTimes","setShowRunningTimes","removeActivationItem","mainTag","setMainTag","onSelectMainTag","onChangeSelect","isDeleteComp","setIsDeleteComp","delModule","optAppData","reject","confirmModal","okText","cancelText","onOk","useKeyDown","preventDefault","beforCopyModule","initCopyModule","copyModule","oprateActivationItem","copyAppData","uuidv4","sort","y","layoutY","layoutH","h","headtab","moduleselect","onSelect","selectedKeys","contentmenu","Item","ToolOutlined","FormatPainterOutlined","CodeOutlined","ClusterOutlined","delete","tips","DeleteOutlined","controllerwrap","RunningTimesModal"],"mappings":"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","file":"static/js/10.73a10490.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"root--34Xb1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"divide\":\"divide--2W45t\",\"dividetext\":\"dividetext--SVCal\",\"row\":\"row--HxAIN\",\"label\":\"label--1ld-0\",\"item\":\"item--1m00X\",\"select\":\"select--2U4G6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mdwrap\":\"mdwrap--4kf5a\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"root--tvVVI\",\"dashboardwrap\":\"dashboardwrap--2_pWO\",\"menuicon\":\"menuicon--2iYbe\",\"dashboard\":\"dashboard--2tiMc\",\"contentmenu\":\"contentmenu--1iJgl\",\"headtab\":\"headtab--18nG9\",\"moduleselect\":\"moduleselect--cZYYe\",\"discfirstitem\":\"discfirstitem--38L2y\",\"controllerwrap\":\"controllerwrap--DKFgS\",\"select\":\"select---mewH\",\"info\":\"info--2IvR1\",\"delete\":\"delete--1U3ry\",\"tips\":\"tips--6l5zl\",\"warn\":\"warn--1bq9E\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dashboardstylewrap\":\"dashboardstylewrap--3uSAI\",\"wrap\":\"wrap--2PWgg\",\"row\":\"row--Iv7yP\",\"bar\":\"bar---PLzd\",\"path\":\"path--12b0Y\",\"select\":\"select--2_p8w\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"row\":\"Display_row__ef1vW\",\"Checkbox\":\"Display_Checkbox__1FOtX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"row\":\"NumberInput_row__1oksR\",\"label\":\"NumberInput_label__2sW5X\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"row\":\"row--P7ZyB\",\"unit\":\"unit--21xHo\",\"wrap\":\"wrap--21Fky\",\"label\":\"label--1quH-\",\"right\":\"right--283vO\",\"boxA\":\"boxA--tMjN1\",\"boxB\":\"boxB--2dxvx\",\"middle\":\"middle--2O-W4\",\"locked\":\"locked--1xni3\",\"unititem\":\"unititem--PAAI2\",\"divide\":\"divide--2K3cJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"row\":\"Font_row__XIb0p\",\"Checkbox\":\"Font_Checkbox__2njkf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"StyleSheetPanel_root__gLBSs\",\"subul\":\"StyleSheetPanel_subul__16lys\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"row\":\"Shadow_row__1nxej\",\"tab\":\"Shadow_tab__22Opi\",\"hidden\":\"Shadow_hidden__3x-hS\",\"divide\":\"Shadow_divide__1RF7u\",\"title\":\"Shadow_title__1NGCq\",\"menu\":\"Shadow_menu__zzFMX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"row\":\"row--k6Bab\",\"tab\":\"tab--14nit\",\"hidden\":\"hidden--2xjg1\",\"divide\":\"divide--2XQlA\",\"title\":\"title--2euQC\",\"menu\":\"menu--25ju_\",\"icon\":\"icon--9xMvg\",\"shadowwrap\":\"shadowwrap--3jtx3\",\"content\":\"content--D1VFZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrap\":\"wrap--1O1rn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"row\":\"row--150Ob\",\"label\":\"label--2rp5S\",\"example\":\"example--2hrkf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"row\":\"row--3O-mE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"row\":\"row--1LAXB\",\"label\":\"label--1-iBs\",\"example\":\"example--OsK0s\",\"menu\":\"menu--a80ne\",\"color\":\"color--39Se6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"row\":\"row--1sHju\",\"label\":\"label--eiufF\",\"icon\":\"icon--7rtnY\",\"alignright\":\"alignright--2H0OI\",\"middle\":\"middle--3yjTZ\",\"locked\":\"locked--10TD2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"row\":\"Transfrom_row__11-7r\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrap\":\"wrap--19K6d\",\"toolbar\":\"toolbar--18ZFc\",\"modeid\":\"modeid--DIFxv\"};","import set from 'lodash/set';\nimport cloneDeep from 'lodash/cloneDeep';\nimport { Api, AppDataElementsStyleTypes } from \"types/appData\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { RootState, Dispatch } from '~/redux/store';\nimport { useCallback } from 'react';\nimport useLocalStorage from './useLocalStorage';\nimport { EventsTypeItem } from '~/types/modules';\n\nconst useMergeAppData = () => {\n    const updateAppData = useDispatch<Dispatch>().appData.updateAppData;\n    const updateActivationItem = useDispatch<Dispatch>().activationItem.updateActivationItem;\n    \n    const appData = useSelector((state: RootState) => state.appData);\n    const nextAppData = cloneDeep(appData);\n\n    const activationItem = useSelector((state: RootState) => state.activationItem);\n    const nextActivationItem = cloneDeep(activationItem);\n\n    const [, setLocalStorage] = useLocalStorage(\"appData\", null);\n    \n    const update = useCallback(\n        (data: AppDataElementsStyleTypes | EventsTypeItem[] | Api[], path: string) => {\n            // 合并数据\n            set(nextActivationItem, path, data);\n\n            // 将编辑数据合并到appData\n            const result = nextAppData.map(item => {\n                if (item.moduleId === nextActivationItem.moduleId) {\n                    return nextActivationItem\n                }\n                return item;\n            })\n            \n            // 更新appData\n            updateAppData(result);\n\n            // 更新activationItem\n            updateActivationItem(nextActivationItem);\n\n            // 更新浏览器本地数据\n            setLocalStorage(result);\n        },\n        [nextActivationItem, nextAppData, updateAppData, updateActivationItem, setLocalStorage],\n    )\n    \n    return update\n}\nexport default useMergeAppData;","import ApiSetting from './ApiSetting'\nexport default ApiSetting;","import cloneDeep from 'lodash/cloneDeep';\nimport React, { useCallback } from 'react';\nimport { useSelector } from 'react-redux';\nimport useMergeAppData from '~/hooks/useMergeAppData';\nimport { RootState } from '~/redux/store';\nimport { Api } from '~/types/appData';\nimport { ExposeApi } from '~/types/modules';\nimport ApiConfig from '../ApiConfig';\n\ninterface Props {}\nconst ApiSetting: React.FC<Props> = () => {\n    /**\n     * 获取当前被选择项的api数据\n     */\n    const activationItem = useSelector(\n        (state: RootState) => state.activationItem\n    );\n\n    const { api, type } = activationItem;\n\n    /**\n     * 获取当前被选组件导出的（自定义）默认Api数据\n     */\n    const getDefaultApiData = useCallback((): ExposeApi[] => {\n        let defaultData = !!type ? require(`~/modules/${type}`).default?.exposeApi : [];\n        defaultData = cloneDeep(defaultData);\n        let optApi = cloneDeep(api);\n        // k-比对apiId合并默认数据与保存数据，\n        const result = defaultData.map((element: ExposeApi) => {\n            const current = optApi?.find(item => item.apiId === element.apiId);\n            let optElememts = element;\n            if (current) {\n                optElememts = {...optElememts, ...current}\n            }\n            return optElememts;\n        });\n        return result;\n    }, [type, api]);\n\n    /**\n     * 更新数据方法\n     */\n    const updateAppdata = useMergeAppData();\n\n    const onChangeApi = useCallback(\n        (data: Api[]) => {\n            updateAppdata(data, 'api');\n        },\n        [updateAppdata]\n    );\n\n    return (\n        <>\n            <ApiConfig\n                apiData={api || []}\n                defaultApiData={getDefaultApiData()}\n                onChange={onChangeApi}\n            />\n        </>\n    );\n};\n\nexport default ApiSetting;\n","import EventsSetting from './EventsSetting';\nexport default EventsSetting","import React, { useCallback } from \"react\";\nimport s from \"./EventsSetting.module.less\";\nimport { useSelector } from \"react-redux\";\nimport { RootState } from \"~/redux/store\";\nimport EventGroup from \"./EventGroup\";\nimport useMergeAppData from \"~/hooks/useMergeAppData\";\nimport { EventsType, EventsTypeItem, ExposeEvents } from \"~/types/modules\";\nimport usePostMessage from \"~/hooks/usePostMessage\";\n\n/**\n * 确定当前激活组件是否向全局发布事件\n * 如果没有则不渲染事件面板\n *\n */\ninterface Props {}\n\nconst EventsSetting: React.FC<Props> = () => {\n  const activationItem = useSelector(\n    (state: RootState) => state.activationItem\n  );\n\n  const sendMessage = usePostMessage(() => {})\n  \n  const { events, type, moduleId } = activationItem;\n\n  /** 更新结果 */\n  const update = useMergeAppData();\n  const onChangeEventGroup = useCallback(\n    (type: ExposeEvents, data: EventsTypeItem[]) => {\n      const path = `events.${type.name}`;\n      update(data, path);\n    },\n    [update]\n  );\n\n  /** 获取当前实例元素的事件清单 */\n  const getCurentEventByEventName = useCallback(\n    (\n      eventName: string, // 事件名称，mounnt unmount ...\n      events: EventsType | undefined\n    ) => {\n      // 事件清单存在，则返回事件清单的事件值\n      if (events && Object.prototype.toString.call(events) === '[object Object]') {\n        return events[eventName] || []\n      }\n      return []\n    },\n    [],\n  )\n\n  const onPlay = useCallback(\n    (curentEventInfomation: ExposeEvents, data: EventsTypeItem[]) => {\n      const win = (document.getElementById('wrapiframe') as HTMLIFrameElement)\n            .contentWindow;\n      sendMessage(\n        {\n            tag: 'playEventEmit',\n            value: {\n              event: curentEventInfomation,\n              args: data\n            },\n        },\n        win\n    );\n    },\n    [sendMessage],\n  )\n\n  if (!moduleId) return null;\n  // 当前激活项模块是否向全局发布事件，\n  const exposeEvents: ExposeEvents[] = require(`~/modules/${type}`).default\n    .exposeEvents;\n  // 检查当前激活项模块无事件发布不做渲染，有则渲染事件编辑设置面板\n  if (exposeEvents.length === 0) return null;\n\n  return <div className={s.root}>\n    {\n      exposeEvents.map(element => (<EventGroup\n        eventName={element.name}\n        key={element.name}\n        value={getCurentEventByEventName(element.name, events)}\n        curentEventInfomation={element}\n        onChange={onChangeEventGroup}\n        onPlay={onPlay}\n      />))\n    }\n  </div>;\n};\n\nexport default EventsSetting;\n","import Presetting from './Presetting';\nexport default Presetting;","import { Col, Input, PageHeader, Row, Select, Tooltip } from 'antd';\nimport deepEqual from 'deep-equal';\nimport parse from 'html-react-parser';\nimport { cloneDeep } from 'lodash';\nimport React, { useCallback, useMemo } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport useLocalStorage from '~/hooks/useLocalStorage';\nimport usePostMessage from '~/hooks/usePostMessage';\nimport { Dispatch, RootState } from '~/redux/store';\nimport { AppDataLayoutItemTypes } from '~/types/appData';\nimport { EventsTypeItem, ExposeFunctions, Modules } from '~/types/modules';\nimport ArrayArguments from '../ArgumentsSetting/ArrayArguments';\nimport BooleanArguments from '../ArgumentsSetting/BooleanArguments';\nimport HtmlSuffix from '../ArgumentsSetting/HtmlSuffix';\nimport MixedArguments from '../ArgumentsSetting/MixedArguments';\nimport ObjectArguments from '../ArgumentsSetting/ObjectArguments';\nimport s from './Presetting.module.less';\n\ninterface Props {}\ninterface OnChangeProps {\n    /* 数据索引值 */\n    index: number;\n    /* 参数索引 */\n    argIndex: number;\n    /* 参数索引对应的参数值 */\n    value: any;\n}\n/**\n * 所有预设事件将在挂载时运行，\n * 其根本还是EventEmitter对事件流控制，\n * 作为预设模块只操作组件自己的内置方法\n * */\n\nconst Presetting: React.FC<Props> = () => {\n    // 获取当前激活组件信息\n    const activationItem = useSelector(\n        (state: RootState) => state.activationItem\n    );\n    const { events, type, moduleId } = activationItem;\n\n    // 获取当前appdata数据准备数据更新方法\n    const appData = useSelector((state: RootState) => state.appData);\n    const [, setLocalStorage] = useLocalStorage('appData', null);\n    const dispatch = useDispatch<Dispatch>();\n\n    // 获取runningtime的属性集合\n    const runningTimes = useSelector((state: RootState) => state.runningTimes);\n\n    // 数据更新\n    const updateActDataToAll = useCallback(\n        (actData: AppDataLayoutItemTypes) => {\n            dispatch.activationItem.updateActivationItem(actData);\n            const operateData = [...appData].map((item) => {\n                if (item.moduleId === actData.moduleId) {\n                    return actData;\n                }\n                return item;\n            });\n            dispatch.appData.updateAppData(operateData);\n            setLocalStorage(operateData);\n        },\n        [appData, dispatch.activationItem, dispatch.appData, setLocalStorage]\n    );\n\n    // 获取当前模块\n    const module: Modules<any> = useMemo(\n        () => (!!type ? require(`~/modules/${type}`).default : {}),\n        [type]\n    );\n    // 获取当前运行时模块已配置的内置方法\n    const setFunctions = useMemo(() => events?.mount || [], [events?.mount]);\n    // 获取当前模块类导出的内置方法，\n    const exposeFunctions: ExposeFunctions[] = useMemo(\n        () => module.exposeFunctions || [],\n        [module.exposeFunctions]\n    );\n\n    // 执行事件\n    const sendMessage = usePostMessage(() => {});\n    const onPlay = useCallback(\n        (data: EventsTypeItem[]) => {\n            const win = (\n                document.getElementById('wrapiframe') as HTMLIFrameElement\n            ).contentWindow;\n            sendMessage(\n                {\n                    tag: 'playEventEmit',\n                    value: {\n                        event: { name: 'mount', description: '初始化' },\n                        args: data,\n                    },\n                },\n                win\n            );\n        },\n        [sendMessage]\n    );\n\n    /**\n     * 处理业务逻辑\n     * 合并三块数据、组件内部，运行时、以及编辑后的数据\n     * 组件内部数据是最全面的预设编辑数据，所以以他为预设的配置显示基准\n     * 而最完整的预设编辑数据的初始值包含内组件部默认数据，运行时mount事件中包含的数据，而运行时数据需要剔除非组件内部属性数据，\n     * 编辑完成后再剔除未配置的数据把配置好的数据返回到运行时数据中\n     */\n\n    // step1、设置预设编辑数据\n    // 运行时mount数据剔除非当前模块数据\n    const getData = useCallback(() => {\n        // 深拷一份组件内部可预设数据 和组件运行时数据\n        const copyExposeFunctions = cloneDeep(exposeFunctions).filter(\n            (item) => item.presettable !== false\n        );\n        const copySetFunctions = cloneDeep(setFunctions);\n\n        const result: ExposeFunctions[] =\n            copyExposeFunctions.map((staticItem) => {\n                // copyExposeFunctions是用于即将预设的静态方法\n                // 断言运行时方法是否有维护当前方法关联的数据，这里使用倒序从后至依次断言，如果有数据，将最后一条数据收集给预设数据\n                copySetFunctions.reverse().some((setItem) => {\n                    const [, funName] = setItem.name.split('/');\n                    if (\n                        funName === staticItem.name &&\n                        Array.isArray(setItem.arguments)\n                    ) {\n                        staticItem.arguments = setItem.arguments;\n                        return true;\n                    }\n                    return false;\n                });\n                return staticItem;\n            }) || [];\n\n        return result;\n    }, [exposeFunctions, setFunctions]);\n\n    // step2、获取预设数据 保存预设面板数据，用于页面render\n    const runningData = getData();\n\n    // step3、数据变更\n    const onChange = useCallback(\n        ({ index, argIndex, value }: OnChangeProps) => {\n            let copyRunningData = [...runningData];\n            // 当前编辑数据赋值\n            if (copyRunningData[index].arguments) {\n                copyRunningData[index].arguments![argIndex] = value;\n            }\n\n            // 从编辑器预设面板获取当前已设置的值copyRunningData；\n            // 将预设值回填给运行时运行时mount数据；\n            // step1、判断预设数据值有没有被编辑过，抽取被编辑过的数据\n            // (判断依据：预设数据和组件静态数据是否保持一至)；\n            const readyToSetting: EventsTypeItem[] = [];\n            copyRunningData.forEach((item, index) => {\n                if (\n                    !deepEqual(\n                        item.arguments,\n                        exposeFunctions[index].arguments\n                    ) ||\n                    !item.arguments?.[index]?.data\n                ) {\n                    readyToSetting.push({\n                        name: `${moduleId}/${item.name}`,\n                        arguments: item.arguments || [],\n                    });\n                }\n            });\n\n            // step2、将抽取的数据更新到运行时mount数据；\n            // 深拷一份当前组件运行时数据 activationItem\n            const copyModuleData = cloneDeep(activationItem);\n            // 没有初始化事件时\n            if (!copyModuleData.events?.mount) {\n                // 还未定义mount事件\n                if (!copyModuleData.events) {\n                    copyModuleData.events = {};\n                }\n                // 给运行时追加准备数据\n                copyModuleData.events.mount = readyToSetting;\n            } else {\n                // 有初始化事件\n                // 倒序是为了匹配最末一条\n                const mount = [...copyModuleData.events.mount].reverse();\n                // 遍历ready数据\n                readyToSetting.forEach((readyItem) => {\n                    // 是否数据覆盖\n                    let isCove: boolean = false;\n                    mount.some((mountItem) => {\n                        if (mountItem.name === readyItem.name) {\n                            mountItem.arguments = readyItem.arguments;\n                            // 覆盖旧值\n                            isCove = true;\n                            return true;\n                        }\n                        return false;\n                    });\n                    // 如果没有覆盖旧值则追加到mount数据上\n                    if (!isCove) {\n                        mount.unshift(readyItem);\n                    }\n                });\n\n                copyModuleData.events.mount = mount.reverse();\n            }\n            // 更新且播放所有内部事件\n            updateActDataToAll(copyModuleData);\n            onPlay(copyModuleData.events.mount);\n        },\n        [\n            activationItem,\n            exposeFunctions,\n            moduleId,\n            onPlay,\n            runningData,\n            updateActDataToAll,\n        ]\n    );\n\n    if (!moduleId) {\n        return null;\n    }\n\n    return (\n        <div>\n            {runningData.map((item, index) =>\n                !!item.arguments?.length && item.presettable !== false ? (\n                    <div key={index} className={s.item}>\n                        <PageHeader title={item.description} />\n                        {item.arguments?.map((argItem, argIndex) => (\n                            <Row className={s.row} key={argIndex} gutter={10}>\n                                <Col span={5} className={s.label}>\n                                    <Tooltip\n                                        placement=\"topRight\"\n                                        title={parse(argItem.describe || '')}\n                                    >\n                                        {argItem.name}\n                                    </Tooltip>\n                                </Col>\n                                <Col span={19}>\n                                    {argItem.type === 'number' ||\n                                    argItem.type === 'string' ? (\n                                        <Input\n                                            onChange={(e) =>\n                                                onChange({\n                                                    index, // 数据索引值\n                                                    argIndex, // 参数索引\n                                                    value: {\n                                                        // 参数索引对应的参数值\n                                                        ...argItem,\n                                                        data: e.target.value,\n                                                    },\n                                                })\n                                            }\n                                            placeholder={`请输入值,${\n                                                argItem.describe || ''\n                                            }`}\n                                            value={argItem.data}\n                                            type=\"text\"\n                                            suffix={\n                                                !!argItem.html ? (\n                                                    <HtmlSuffix />\n                                                ) : null\n                                            }\n                                        />\n                                    ) : null}\n\n                                    {argItem.type === 'runningTime' ? (\n                                        <Select\n                                            className={s.select}\n                                            placeholder=\"请选择\"\n                                            showSearch\n                                            value={argItem.data}\n                                            optionFilterProp=\"children\"\n                                            filterOption={\n                                                (input, option) => {\n                                                    const childrens = (Array.isArray(option?.children)?option?.children.join('') : option?.children).toLowerCase();\n                                                    if (childrens.indexOf(input) !== -1) {\n                                                        return true;\n                                                    }\n                                                    return false;\n                                                }\n                                                // option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\n                                            }\n                                            onChange={(e) =>\n                                                onChange({\n                                                    index, // 数据索引值\n                                                    argIndex, // 参数索引\n                                                    value: {\n                                                        // 参数索引对应的参数值\n                                                        ...argItem,\n                                                        data: e,\n                                                    },\n                                                })\n                                            }\n                                        >\n                                            {Object.keys(runningTimes)?.map(\n                                                (item, index) => (\n                                                    <Select.Option key={index} value={item}>\n                                                        {item}\n                                                    </Select.Option>\n                                                )\n                                            )}\n                                        </Select>\n                                    ) : null}\n\n                                    {argItem.type === 'array' ? (\n                                        <ArrayArguments\n                                            typeArguments={argItem}\n                                            flexible\n                                            htmlInput={!!argItem.html}\n                                            onChange={(value) =>\n                                                onChange({\n                                                    index,\n                                                    argIndex,\n                                                    value,\n                                                })\n                                            }\n                                        />\n                                    ) : null}\n                                    {argItem.type === 'boolean' ? (\n                                        <BooleanArguments\n                                            typeArguments={argItem}\n                                            flexible={false}\n                                            onChange={(value) =>\n                                                onChange({\n                                                    index,\n                                                    argIndex,\n                                                    value,\n                                                })\n                                            }\n                                        />\n                                    ) : null}\n                                    {argItem.type === 'object' ? (\n                                        <ObjectArguments\n                                            describe={argItem.describe}\n                                            htmlInput={!!argItem.html}\n                                            onChange={(value) =>\n                                                onChange({\n                                                    index,\n                                                    argIndex,\n                                                    value,\n                                                })\n                                            }\n                                            typeArguments={argItem}\n                                            flexible={false}\n                                        />\n                                    ) : null}\n                                    {argItem.type === 'mixed' ? (\n                                        <MixedArguments\n                                            onChange={(value) =>\n                                                onChange({\n                                                    index,\n                                                    argIndex,\n                                                    value,\n                                                })\n                                            }\n                                            typeArguments={argItem}\n                                            flexible={false}\n                                        />\n                                    ) : null}\n                                </Col>\n                            </Row>\n                        ))}\n                    </div>\n                ) : null\n            )}\n        </div>\n    );\n};\n\nexport default Presetting;\n","import MarkdownModalDoc from './MarkdownModalDoc';\nexport default MarkdownModalDoc;","import { Modal } from \"antd\";\nimport React, { useCallback, useEffect } from \"react\";\nimport useMarked from \"~/hooks/useMarked\";\nimport s from \"./MarkdownModalDoc.module.less\";\n\ninterface Props {\n  visible: boolean;\n  moduleName?: string;\n  onCancel: () => void;\n}\n\nconst MarkdownModalDoc: React.FC<Props> = ({\n  visible,\n  moduleName,\n  onCancel,\n}) => {\n  const [helper, setHelper] = useMarked();\n\n  const getMd = useCallback(\n    async (name?: string) => {\n      if (!moduleName) {\n        setHelper(\"\");\n        return;\n      }\n      let text: string = `<h3>找不到${name}文档</h3>请联系模块作者补充`;\n      try {\n        const file = await import(`~/modules/${name}/README.md`);\n        const response = await fetch(file.default);\n        text = await response.text();\n      } catch (error) {\n        console.warn(error);\n      }\n      setHelper(text);\n    },\n    [moduleName, setHelper]\n  );\n\n  useEffect(() => {\n    if (visible) {\n      getMd(moduleName);\n    }\n  }, [getMd, moduleName, visible]);\n\n  return (\n    <>\n      <Modal\n        visible={visible}\n        width={900}\n        footer={null}\n        onCancel={onCancel}\n        bodyStyle={{ padding: \"20px 10px 30px 10px\" }}\n      >\n        <div className={s.mdwrap}>\n          <div>{helper}</div>\n        </div>\n      </Modal>\n    </>\n  );\n};\n\nexport default MarkdownModalDoc;\n","import { useCallback, useMemo, useState } from \"react\";\nimport { Collapse, Tooltip } from \"antd\";\nimport ApiSetting from \"../ApiSetting\";\nimport EventsSetting from \"../EventsSetting\";\nimport { useSelector } from \"react-redux\";\nimport { RootState } from \"~/redux/store\";\nimport { Modules } from \"~/types/modules\";\nimport Presetting from \"../Presetting\";\nimport { ExceptionOutlined, InfoCircleOutlined } from \"@ant-design/icons\";\nimport MarkdownModalDoc from \"../MarkdownModalDoc\";\nconst { Panel } = Collapse;\n\nconst ConfigurationController = () => {\n  /**\n   * 获取当前被选择项的api数据\n   */\n  const activationItem = useSelector(\n    (state: RootState) => state.activationItem\n  );\n\n  const { type } = activationItem;\n    \n  /**\n   * 获取当前被选组件导出的（自定义）默认Api数据\n   */\n\n  const module: Modules<any> = useMemo(\n    () => (!!type ? require(`~/modules/${type}`).default : {}),\n    [type]\n  );\n\n  const [showHelp, setShowHelp] = useState(false);\n\n  const handlerHelp = useCallback(\n    (e) => {\n      e.stopPropagation();\n      setShowHelp(true);\n    },\n    [],\n  )\n\n  return (\n    <>\n    <Collapse\n      accordion\n      bordered={false}\n      defaultActiveKey={module.exposeFunctions?.length ? [\"0\"] : [\"1\"]}\n    >\n      {module.exposeFunctions?.length ? (\n        <Panel header=\"预设\" key=\"0\" extra={<div onClick={handlerHelp}><ExceptionOutlined /> 帮助</div>}>\n          <Presetting />\n        </Panel>\n      ) : null}\n      <Panel header=\"事件\" key=\"1\">\n        <EventsSetting />\n      </Panel>\n      {module.exposeApi?.length ? (\n        <Panel\n          header=\"Api\"\n          key=\"2\"\n          extra={<Tooltip\n            title={\n              <div>\n                返回数据结构\n                <br />\n                [data]: 原始数据, <br />\n                [target]: 转换/映射数据\n                <br />\n                {`{ `}\n                <br />\n                data: any, <br />\n                [target1]: any, <br />\n                [target2]: any, <br />\n                [target...n]: any <br />\n                {`}`}\n              </div>\n            }\n          >\n            <InfoCircleOutlined />\n          </Tooltip>\n          }\n        >\n          <ApiSetting />\n        </Panel>\n      ) : null}\n    </Collapse>\n    <MarkdownModalDoc visible={showHelp} moduleName={type} onCancel={() => setShowHelp(false)} />\n    </>\n  );\n};\n\nexport default ConfigurationController;\n","import ConfigurationController from './ConfigurationController';\nexport default ConfigurationController;","import NumberInput from './NumberInput';\nexport default NumberInput;","import React, { useCallback, useEffect, useMemo, useRef, useState } from 'react';\nimport { Row, Col, InputNumber } from 'antd';\nimport s from './NumberInput.module.scss';\nimport { InputNumberProps } from 'antd/lib/input-number';\nimport { useSelector } from 'react-redux';\nimport { RootState } from '~/redux/store';\nimport useSafeCallback from '~/hooks/useSafeCallback';\nimport { throttle } from 'lodash';\n\ninterface Props extends InputNumberProps {\n    label: string;\n    unit?: string;\n}\n\nconst QuadrangularSelect: React.FC<Props> = ({\n    unit,\n    label,\n    defaultValue,\n    onChange,\n    ...other\n}) => {\n    const ref = useRef(null);\n    const moduleId = useSelector(\n        (state: RootState) => state.activationItem.moduleId\n    );\n\n    useEffect(() => {\n        if (ref.current) {\n            (ref.current as any).blur();\n        }\n    }, [moduleId]);\n\n    const [onDebounce, setOnDebounce] = useState(false);\n    const onFocus = useCallback(() => {\n        // 开启防抖禁止defaultValue回填\n        setOnDebounce(true);\n    }, []);\n    const onBlur = useCallback(() => {\n        // 关闭防抖允许defaultValue回填\n        setValue(defaultValue);\n        setOnDebounce(false);\n    }, [defaultValue]);\n\n    // 接管默认值\n    const [value, setValue] = useState(defaultValue);\n\n    useEffect(() => {\n      if (!onDebounce) {\n        setValue(defaultValue);\n      } \n    }, [defaultValue, onDebounce]);\n\n    const refChange = useSafeCallback(onChange);\n\n    /**\n     * 高频编辑防抖处理\n     */\n    const onChangeDebounce = useMemo(\n        () =>\n            throttle((e: number) => {\n                console.log(e);\n                refChange(e);\n            }, 500),\n        [refChange]\n    );\n\n    const onChangeValue = useCallback(\n      (e) => {\n        setValue(e);\n        onChangeDebounce(e);\n      },\n      [onChangeDebounce],\n    )\n    \n    return (\n        <Row className={s.row} gutter={4}>\n            <Col className={s.label} span={7}>\n                {label || ''}\n            </Col>\n            <Col span={unit ? 15 : 17}>\n                <InputNumber\n                    {...other}\n                    onChange={onChangeValue}\n                    onBlur={onBlur}\n                    onFocus={onFocus}\n                    value={value}\n                    ref={ref}\n                />\n            </Col>\n            {unit ? <Col span={2}>{unit || ''}</Col> : null}\n        </Row>\n    );\n};\n\nexport default QuadrangularSelect;\n","import { LinkOutlined } from \"@ant-design/icons\";\nimport { Row, Col, Divider } from \"antd\";\nimport React, { useCallback, useEffect, useState } from \"react\";\nimport { UnitType } from \"~/types/appData\";\nimport Unitinput from \"../UnitInput/UnitInput\";\nimport s from \"./Spacing.module.less\";\n\ntype SpaceType = \"padding\" | \"margin\";\n\ninterface Props {\n  unit?: string;\n  onChange: (type: SpaceType, values: { [keys: string]: any }) => void;\n  margin?: any[];\n  padding?: any[];\n}\n\nconst defaultVal = [undefined, undefined, undefined, undefined];\n\nconst Spacing: React.FC<Props> = ({ unit, onChange, margin, padding }) => {\n  const [spaceType, setSpaceType] = useState<\"margin\" | \"padding\">(\"padding\");\n\n  const [inValues, setInValues] = useState<any[]>(defaultVal);\n\n  const [outValues, setOutValues] = useState<any[]>(defaultVal);\n\n  const [locked, setLocked] = useState<boolean>();\n\n  useEffect(() => {\n    setInValues(padding || defaultVal);\n  }, [padding]);\n  useEffect(() => {\n    setOutValues(margin || defaultVal);\n  }, [margin]);\n\n  const onChangeValue = useCallback(\n    (index: number) => (value: UnitType) => {\n      if (spaceType === \"padding\") {\n        const values: any[] = [...inValues];\n        values[index] = value;\n        if (locked === true) {\n          values[1] = values[2] = values[3] = values[0] = value;\n        }\n        setInValues(values);\n        onChange(spaceType, values);\n      }\n      if (spaceType === \"margin\") {\n        const values = [...outValues];\n        values[index] = value;\n        if (locked === true) {\n          values[1] = values[2] = values[3] = values[0] = value;\n        }\n        setOutValues(values);\n        onChange(spaceType, values);\n      }\n    },\n    [spaceType, inValues, locked, onChange, outValues]\n  );\n\n  const getValue = useCallback(\n    (type = spaceType) => {\n      let values: any[] = [];\n      if (type === \"padding\") {\n        values = inValues;\n      }\n      if (type === \"margin\") {\n        values = outValues;\n      }\n      return values;\n    },\n    [inValues, outValues, spaceType]\n  );\n\n  const onChangeType = useCallback(\n    (type: SpaceType) => (e: any) => {\n      e.stopPropagation();\n      setSpaceType(type);\n      const values = getValue(type);\n      const unEqu = values.filter((item) => values[0] !== item);\n      if (!!unEqu.length) {\n        setLocked(false);\n      } else {\n        setLocked(true);\n      }\n    },\n    [getValue, setLocked]\n  );\n\n  const onToggleLocker = useCallback(() => {\n    setLocked(!locked);\n  }, [locked]);\n\n  const setLabel = useCallback((index: number) => {\n    switch (index) {\n      case 0:\n        return \"顶部\";\n      case 1:\n        return \"右边\";\n      case 2:\n        return \"底部\";\n      case 3:\n        return \"左边\";\n      default:\n        return \"\";\n    }\n  }, []);\n\n  return (\n    <>\n      <Divider orientation=\"left\"><span className={s.divide}>边距</span></Divider>\n      <Row gutter={4}>\n        <Col span={9}>\n          <div\n            className={s.boxA}\n            onClick={onChangeType(\"margin\")}\n            style={\n              spaceType === \"margin\"\n                ? { backgroundColor: \"#fff\" }\n                : { backgroundColor: \"#eee\" }\n            }\n          >\n            <div\n              className={s.boxB}\n              onClick={onChangeType(\"padding\")}\n              style={\n                spaceType === \"padding\"\n                  ? { backgroundColor: \"#fff\" }\n                  : { backgroundColor: \"#eee\" }\n              }\n            />\n          </div>\n        </Col>\n        <Col span={3} className={s.middle}>\n          <LinkOutlined\n            onClick={onToggleLocker}\n            className={locked ? s.locked : undefined}\n          />\n        </Col>\n        <Col span={12}>\n          {getValue().map((item, index) => {\n            return <Unitinput\n              span={{ label: 3, wrapper: 21 }}\n              key={`${spaceType}${index}`}\n              className={s.unititem}\n              label={setLabel(index)}\n              defaultValue={item}\n              onChange={onChangeValue(index)}\n            />;\n          })}\n        </Col>\n      </Row>\n    </>\n  );\n};\n\nexport default Spacing;","import Spacing from './Spacing';\nexport default Spacing","import Display from './Display';\nexport default Display;","import React, { useCallback, useEffect, useState } from \"react\";\nimport { Row, Col } from \"antd\";\nimport Select from \"./../Select\";\nimport s from \"./Display.module.scss\";\nimport NumberInput from \"../NumberInput\";\nimport { DisplayTypesOfStyleItems } from \"types/appData\";\nimport { useSelector } from \"react-redux\";\nimport { RootState } from \"~/redux/store\";\nimport Spacing from \"../Spacing\";\nimport UnitInput from \"../UnitInput\";\n\ninterface Props {\n  onChange: (result: DisplayTypesOfStyleItems) => void;\n  defaultData?: DisplayTypesOfStyleItems;\n  unit?: string;\n}\n\ntype ChangeType =\n  | \"width\"\n  | \"height\"\n  | \"zIndex\"\n  | \"position\"\n  | \"left\"\n  | \"right\"\n  | \"top\"\n  | \"bottom\"\n  | \"display\"\n  | \"boxSizing\"\n  | \"overflow\"\n  | \"pointerEvents\";\n\nconst Display: React.FC<Props> = ({ onChange, defaultData, unit }) => {\n  const [displayData, setDisplayData] = useState<DisplayTypesOfStyleItems>({});\n  const moduleId = useSelector(\n    (state: RootState) => state.activationItem.moduleId\n  );\n  const {\n    width,\n    height,\n    zIndex,\n    position,\n    left,\n    right,\n    top,\n    bottom,\n    margin,\n    padding,\n    display,\n    overflow,\n    boxSizing,\n    pointerEvents\n  } = displayData;\n\n  useEffect(() => {\n    setDisplayData({ ...defaultData });\n  }, [defaultData, moduleId]);\n\n  const onChangeDisplay = useCallback(\n    (type: ChangeType) => (data: any) => {\n      displayData[type] = data;\n      if (type === \"position\" && data === \"relative\") {\n        delete displayData.left;\n        delete displayData.right;\n        delete displayData.top;\n        delete displayData.bottom;\n      }\n      \n      if (!displayData.width && !displayData.height  ) {\n        delete displayData.boxSizing\n      }\n      setDisplayData({ ...displayData });\n      if (onChange instanceof Function) {\n        onChange(displayData);\n      }\n    },\n    [displayData, onChange]\n  );\n\n  const onChangeSpace = useCallback(\n    (type, value) => {\n      const data: DisplayTypesOfStyleItems = { ...displayData };\n      data[type] = value;\n      setDisplayData(data);\n      if (onChange instanceof Function) {\n        onChange(data);\n      }\n    },\n    [displayData, onChange]\n  );\n\n  const onChangeOption = useCallback(\n    (option: string) => (value: [string | number | null, string]) => {\n      const oprateData: DisplayTypesOfStyleItems = { ...displayData };\n      oprateData[option] = value;\n      setDisplayData(oprateData);\n      if (onChange instanceof Function) {\n        onChange(oprateData);\n      }\n    },\n    [displayData, onChange]\n  );\n\n  return (\n    <>\n      <Row className={s.row}>\n        <Col span={12}>\n          <UnitInput\n            defaultValue={width}\n            min={0}\n            onChange={onChangeOption(\"width\")}\n            label=\"宽度\"\n          />\n        </Col>\n        <Col span={12}>\n          <UnitInput\n            defaultValue={height}\n            min={0}\n            onChange={onChangeOption(\"height\")}\n            label=\"高度\"\n          />\n        </Col>\n      </Row>\n      <Row className={s.row}>\n        <Col span={12}>\n          <Select\n            label=\"显示类型\"\n            value={display}\n            optionsData={{\n              block: \"块级元素\",\n              inline: \"内联元素\",\n              \"inline-block\": \"行内块元素\",\n              none: \"隐藏\",\n              \"\": \"无\",\n            }}\n            onChange={onChangeDisplay(\"display\")}\n          />\n        </Col>\n        <Col span={12}>\n          <Select\n            label=\"内容溢出\"\n            value={overflow}\n            optionsData={{\n              visible: \"显示\",\n              hidden: \"修剪\",\n              scroll: \"滚动\",\n              auto: \"自动\",\n              \"\": \"无\",\n            }}\n            onChange={onChangeDisplay(\"overflow\")}\n          />\n        </Col>\n      </Row>\n      <Row className={s.row}>\n        <Col span={12}>\n          <Select\n            placehold=\"请先设置宽高\"\n            label=\"尺寸限制\"\n            value={boxSizing}\n            optionsData={{ 'content-box': \"自动扩展\", 'border-box': \"固定宽高\", \"\": \"无\" }}\n            onChange={onChangeDisplay(\"boxSizing\")}\n          />\n        </Col>\n        <Col span={12}>\n          <NumberInput\n            label=\"层级\"\n            min={1}\n            max={100000}\n            defaultValue={zIndex}\n            onChange={onChangeDisplay(\"zIndex\")}\n          />\n        </Col>\n      </Row>\n      <Row className={s.row}>\n        <Col span={12}>\n          <Select\n            label=\"定位\"\n            value={position}\n            optionsData={{ absolute: \"绝对\", relative: \"相对\", \"\": \"无\" }}\n            onChange={onChangeDisplay(\"position\")}\n          />\n        </Col>\n        <Col span={12}>\n          <Select\n            label=\"事件响应\"\n            value={pointerEvents}\n            optionsData={{ auto: \"自动\", none: \"不接受任何事件\"}}\n            onChange={onChangeDisplay(\"pointerEvents\")}\n          />\n        </Col>\n      </Row>\n      {position === \"absolute\" || position === \"fixed\" ? (\n        <Row className={s.row}>\n          <Col span={12}>\n            <UnitInput\n              defaultValue={left}\n              min={-100000}\n              max={100000}\n              onChange={onChangeOption(\"left\")}\n              label=\"左定位\"\n            />\n          </Col>\n          <Col span={12}>\n            <UnitInput\n                defaultValue={right}\n                min={-100000}\n                max={100000}\n                onChange={onChangeOption(\"right\")}\n                label=\"右定位\"\n              />\n          </Col>\n        </Row>\n      ) : null}\n      {position === \"absolute\" || position === \"fixed\" ? (\n        <Row className={s.row}>\n          <Col span={12}>\n            <UnitInput\n                defaultValue={top}\n                min={-100000}\n                max={100000}\n                onChange={onChangeOption(\"top\")}\n                label=\"上定位\"\n              />\n          </Col>\n          <Col span={12}>\n          <UnitInput\n                defaultValue={bottom}\n                min={-100000}\n                max={100000}\n                onChange={onChangeOption(\"bottom\")}\n                label=\"下定位\"\n              />\n          </Col>\n        </Row>\n      ) : null}\n      <Spacing\n        unit={unit}\n        onChange={onChangeSpace}\n        margin={margin}\n        padding={padding}\n      />\n    </>\n  );\n};\n\nexport default Display;\n","import Font from './Font';\nexport default Font;","import React, { useCallback, useEffect, useState } from \"react\";\nimport { Row, Col } from \"antd\";\nimport { Radio, Checkbox } from \"antd\";\n\nimport {\n  AlignLeftOutlined,\n  AlignRightOutlined,\n  AlignCenterOutlined,\n  BoldOutlined,\n  UnderlineOutlined,\n  ItalicOutlined,\n  StrikethroughOutlined,\n} from \"@ant-design/icons\";\nimport s from \"./Font.module.scss\";\nimport Color from \"../Color\";\nimport { FontTypesOfStyleItems } from \"types/appData\";\nimport { useSelector } from \"react-redux\";\nimport { RootState } from \"~/redux/store\";\nimport UnitInput from \"../UnitInput\";\n\ninterface Props {\n  onChange: (result: FontTypesOfStyleItems) => void;\n  defaultData?: FontTypesOfStyleItems;\n  unit?: string;\n}\n\ntype ChangeType =\n  | \"color\"\n  | \"fontSize\"\n  | \"lineHeight\"\n  | \"letterSP\"\n  | \"wordSp\"\n  | \"decoration\"\n  | \"fontWeight\"\n  | \"fontStyle\"\n  | \"align\";\n\nconst Font: React.FC<Props> = ({ onChange, defaultData, unit }) => {\n  const [fontData, setFontData] = useState<FontTypesOfStyleItems>({});\n  const {\n    fontSize,\n    align,\n    lineHeight,\n    letterSP,\n    fontWeight,\n    fontStyle,\n    color,\n    decoration,\n  } = fontData;\n  const moduleId = useSelector(\n    (state: RootState) => state.activationItem.moduleId\n  );\n\n  useEffect(() => {\n    const data: FontTypesOfStyleItems = { ...(defaultData || {}) };\n    setFontData(data);\n  }, [defaultData, moduleId]);\n\n  const onChangeFont = useCallback(\n    (type: ChangeType) => (data: any) => {\n      let value = data;\n      if (type === \"align\" || type === \"decoration\" || type === \"fontWeight\") {\n        value = data.target.value;\n      }\n      if (type === \"fontWeight\") {\n        if (data.target.checked) {\n          value = \"bold\";\n        } else {\n          value = \"normal\";\n        }\n      }\n      if (type === \"fontStyle\") {\n        if (data.target.checked) {\n          value = \"italic\";\n        } else {\n          value = \"normal\";\n        }\n      }\n      if (type === \"color\") {\n        value = (value.value && `rgba(${data.value.rgb.r}, ${data.value.rgb.g}, ${data.value.rgb.b}, ${data.value.rgb.a})`);\n      }\n      fontData[type] = value;\n      setFontData({ ...fontData });\n      if (onChange instanceof Function) {\n        onChange(fontData);\n      }\n    },\n    [fontData, onChange]\n  );\n\n  return (\n    <>\n      <Row className={s.row}>\n        <Col span={8}>\n          <Radio.Group value={align} onChange={onChangeFont(\"align\")}>\n            <Radio.Button value=\"left\">\n              <AlignLeftOutlined />\n            </Radio.Button>\n            <Radio.Button value=\"center\">\n              <AlignCenterOutlined />\n            </Radio.Button>\n            <Radio.Button value=\"right\">\n              <AlignRightOutlined />\n            </Radio.Button>\n          </Radio.Group>\n        </Col>\n        <Col span={8}>\n          <Radio.Group value={decoration} onChange={onChangeFont(\"decoration\")}>\n            <Radio.Button value=\"none\">N</Radio.Button>\n            <Radio.Button value=\"underline\">\n              <UnderlineOutlined />\n            </Radio.Button>\n            <Radio.Button value=\"line-through\">\n              <StrikethroughOutlined />\n            </Radio.Button>\n          </Radio.Group>\n        </Col>\n        <Col span={8}>\n          <Checkbox\n            className={s.Checkbox}\n            checked={fontWeight === \"bold\"}\n            onChange={onChangeFont(\"fontWeight\")}\n          >\n            <BoldOutlined />\n          </Checkbox>\n          <Checkbox\n            className={s.Checkbox}\n            checked={fontStyle === \"italic\"}\n            onChange={onChangeFont(\"fontStyle\")}\n          >\n            <ItalicOutlined />\n          </Checkbox>\n        </Col>\n      </Row>\n      <Row className={s.row}>\n        <Col span={12}>\n          <Color\n            label=\"字体颜色\"\n            onChange={onChangeFont(\"color\")}\n            defaultColor={color}\n          />\n        </Col>\n        <Col span={12}>\n          <UnitInput \n            label=\"字体大小\"\n            min={0}\n            max={100000}\n            defaultValue={fontSize}\n            onChange={onChangeFont(\"fontSize\")}\n          />\n        </Col>\n      </Row>\n      <Row className={s.row}>\n        <Col span={12}>\n          <UnitInput \n            label=\"行间距\"\n            min={0}\n            max={100000}\n            defaultValue={lineHeight}\n            onChange={onChangeFont(\"lineHeight\")}\n          />\n        </Col>\n        <Col span={12}>\n          <UnitInput \n            label=\"字间距\"\n            min={0}\n            max={100000}\n            defaultValue={letterSP}\n            onChange={onChangeFont(\"letterSP\")}\n          />\n        </Col>\n      </Row>\n    </>\n  );\n};\n\nexport default Font;\n","import * as React from \"react\"\n\nfunction MoveIcon() {\n  return (\n    <svg\n      viewBox=\"0 0 24 24\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <path d=\"M15.5 7h-7C7.673 7 7 6.327 7 5.5c0-.367.134-.719.376-.992L10.873.511c.555-.646 1.695-.65 2.256.003l3.497 3.997c.24.27.374.622.374.989 0 .827-.673 1.5-1.5 1.5zM12 1a.49.49 0 00-.371.166L8.126 5.169A.5.5 0 008.5 6h7a.5.5 0 00.376-.828l-3.503-4.003A.489.489 0 0012 1zM12 24c-.438 0-.849-.188-1.129-.514l-3.497-3.997A1.489 1.489 0 017 18.5c0-.827.673-1.5 1.5-1.5h7c.827 0 1.5.673 1.5 1.5 0 .367-.134.719-.376.992l-3.497 3.997A1.484 1.484 0 0112 24zm-3.5-6a.5.5 0 00-.376.828l3.503 4.003a.512.512 0 00.744.003l3.503-4.003A.5.5 0 0015.5 18zM12 15c-1.654 0-3-1.346-3-3s1.346-3 3-3 3 1.346 3 3-1.346 3-3 3zm0-5c-1.103 0-2 .897-2 2s.897 2 2 2 2-.897 2-2-.897-2-2-2z\" />\n    </svg>\n  )\n}\n\nexport default MoveIcon","import { MinusOutlined } from '@ant-design/icons';\nimport { Button, Col, Row, Switch } from 'antd';\nimport classNames from 'classnames';\nimport React from 'react';\nimport { SortableElement, SortableHandle } from 'react-sortable-hoc';\nimport Color from '../../Color';\nimport UnitInput from '../../UnitInput';\nimport { BoxShadow } from '../Shadow';\nimport MoveIcon from './MoveIcon';\nimport s from './ShadowItem.module.less';\n\n\nconst DragHandle = SortableHandle(() => (\n  <span className={s.icon}>\n    <MoveIcon />\n  </span>\n));\n\ninterface Props {\n    data: BoxShadow,\n    type: \"box\" | \"text\",\n    onMinus: () => void;\n    onToggleShow: () => void;\n    onChangeColor: (data: any) => void;\n    onChangeInset: (e: boolean) => void;\n    onChangeshiftRight: (e: any) => void;\n    onChangeshiftDown: (e: any) => void;\n    onChangeBlur: (e: any) => void;\n    onChangeSpread: (e: any) => void;\n}\n\nconst ShadowItem:React.FC<Props> = ({data, type, onMinus, onToggleShow, onChangeColor, onChangeInset, onChangeshiftRight, onChangeshiftDown, onChangeBlur, onChangeSpread}) => {\n    return (\n        <div className={classNames(s.shadowwrap, 'shadowwrap')}>\n            <DragHandle />\n            <div className={s.divide}>\n              <div className={s.title} />\n              <div className={s.menu}>\n                <Button\n                  size=\"small\"\n                  icon={<MinusOutlined onClick={onMinus} />}\n                >删除</Button>\n              </div>\n            </div>\n            <div className={classNames({ [s.hidden]: data.hiddenItem }, s.content)}>\n              <Row className={s.row}>\n                <Col span={12}>\n                  <Color\n                    label=\"投影颜色\"\n                    onChange={onChangeColor}\n                    defaultColor={data.color}\n                  />\n                </Col>\n                <Col span={12}>\n                  {type !== \"text\" ? (\n                    <Row>\n                      <Col span={12}></Col>\n                      <Col span={12} style={{textAlign: 'right'}}>\n                        <Switch\n                          checkedChildren=\"内阴影\"\n                          unCheckedChildren=\"内阴影\"\n                          checked={data.inset}\n                          onChange={onChangeInset}\n                        />\n                      </Col>\n                    </Row>\n                  ) : null}\n                </Col>\n              </Row>\n              <Row className={s.row}>\n                <Col span={12}>\n                  <UnitInput\n                    label=\"横向偏移\"\n                    min={-1000}\n                    max={1000}\n                    defaultValue={data.shiftRight as any}\n                    onChange={onChangeshiftRight}\n                  />\n                </Col>\n                <Col span={12}>\n                  <UnitInput\n                    label=\"纵向偏移\"\n                    min={-1000}\n                    max={1000}\n                    defaultValue={data.shiftDown as any}\n                    onChange={onChangeshiftDown}\n                  />\n                </Col>\n              </Row>\n              <Row className={s.row}>\n                <Col span={12}>\n                  <UnitInput\n                    label=\"模糊\"\n                    min={-1000}\n                    max={1000}\n                    defaultValue={data.blur as any}\n                    onChange={onChangeBlur}\n                  />\n                </Col>\n                <Col span={12}>\n                  {type !== \"text\" ? (\n                    <UnitInput\n                      label=\"扩展\"\n                      min={-1000}\n                      max={1000}\n                      defaultValue={data.spread as any}\n                      onChange={onChangeSpread}\n                    />\n                  ) : null}\n                </Col>\n              </Row>\n            </div>\n          </div>\n    )\n}\n\nexport default SortableElement(ShadowItem)","import ShadowItem from './ShadowItem';\nexport default ShadowItem","import ShadowListHoc from './ShadowListHoc';\nexport default ShadowListHoc;","import React from 'react';\nimport { SortableContainer } from 'react-sortable-hoc';\nimport { BoxShadow } from '../Shadow';\nimport ShadowItem from '../ShadowItem';\nimport s from './ShadowListHoc.module.less';\n\ntype Type = \"text\" | \"box\";\n\ninterface Props {\n    data: BoxShadow[];\n    type: Type;\n    onMinus: (type: Type, i:number) => void;\n    onToggleShow: (i: number, type: Type) => void;\n    onChangeColor: (type: Type, i:number, color: any) => void;\n    onChangeInset: (type: Type, i:number, value: boolean) => void;\n    onChangeshiftRight: (type: Type, i:number, value:any) => void;\n    onChangeshiftDown: (type: Type, i:number, value:any) => void;\n    onChangeBlur: (type: Type, i:number, value:any) => void;\n    onChangeSpread: (type: Type, i:number, value:any) => void;\n}\n\nconst ShadowListHoc = SortableContainer(({\n    data,\n    type,\n    onMinus,\n    onToggleShow,\n    onChangeColor,\n    onChangeInset,\n    onChangeshiftRight,\n    onChangeshiftDown,\n    onChangeBlur,\n    onChangeSpread,\n}: Props) => {\n    return (\n        <div className={s.wrap}>\n            {data.map((item, i) => (\n          <ShadowItem\n            key={i}\n            index={i}\n            data={item}\n            type={type}\n            onMinus={() => onMinus(type, i)}\n            onToggleShow={() => onToggleShow(i, type)}\n            onChangeColor={(color: any) => onChangeColor(type, i, color)}\n            onChangeInset={(value) => onChangeInset(type, i, value)}\n            onChangeshiftRight={(value: any) => onChangeshiftRight(type, i, value)}\n            onChangeshiftDown={(value: any) => onChangeshiftDown(type, i, value)}\n            onChangeBlur={(value: any) => onChangeBlur(type, i, value)}\n            onChangeSpread={(value: any) => onChangeSpread(type, i, value)}\n          />\n        ))}\n        </div>\n    )\n})\n\nexport default ShadowListHoc","import Shadow from './Shadow';\nexport default Shadow;","import {\n  PlusOutlined,\n} from \"@ant-design/icons\";\nimport { Row, Col, Radio, Button } from \"antd\";\nimport arrayMove from \"array-move\";\nimport React, { useCallback, useEffect, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { RootState } from \"~/redux/store\";\nimport { UnitType } from \"~/types/appData\";\nimport s from \"./Shadow.module.scss\";\nimport ShadowListHoc from \"./ShadowListHoc\";\n\ninterface TextShadow {\n  hiddenItem?: boolean;\n  shiftRight?: UnitType;\n  shiftDown?: UnitType;\n  blur?: UnitType;\n  color?: string;\n}\n\nexport interface BoxShadow extends TextShadow {\n  hiddenItem?: any;\n  spread?: UnitType;\n  inset?: boolean;\n}\n\ninterface Props {\n  unit?: string;\n  onChange?: (data: {\n    type: \"boxShadow\" | \"textShadow\";\n    values: BoxShadow[];\n  }) => void;\n  defaultValue?: {\n    boxShadowList?: BoxShadow[];\n    textShadowList?: TextShadow[];\n  };\n}\n\nconst Shadow: React.FC<Props> = ({ unit, onChange, defaultValue }) => {\n  const [shadowType, setShadowType] = useState<\"text\" | \"box\">(\"box\");\n  const [textShadowList, setTextShadowList] = useState<TextShadow[]>([]);\n  const [boxShadowList, setBoxShadowList] = useState<BoxShadow[]>([]);\n  const moduleId = useSelector(\n    (state: RootState) => state.activationItem.moduleId\n  );\n\n  // init DefaultData\n  useEffect(() => {\n    let textShadowList = [...(defaultValue?.textShadowList || [])];\n    let boxShadowList = [...(defaultValue?.boxShadowList || [])];\n\n    textShadowList = textShadowList.map((item) => {\n      item.hiddenItem = false;\n      return item;\n    });\n\n    boxShadowList = boxShadowList.map((item) => {\n      item.hiddenItem = false;\n      return item;\n    });\n\n    setTextShadowList(textShadowList);\n    setBoxShadowList(boxShadowList);\n  }, [defaultValue?.boxShadowList, defaultValue?.textShadowList, moduleId]);\n\n  useEffect(() => {\n    setShadowType(\"box\");\n  }, [moduleId]);\n\n  const onChangeShadowTab = useCallback((e) => {\n    setShadowType(e.target.value);\n  }, []);\n\n  const onChangeShadow = useCallback(\n    (type: \"box\" | \"text\", values) => {\n      if (onChange instanceof Function) {\n        if (type === \"text\") {\n          onChange({ type: \"textShadow\", values });\n        }\n        if (type === \"box\") {\n          onChange({ type: \"boxShadow\", values });\n        }\n      }\n    },\n    [onChange]\n  );\n\n  const onPlus = useCallback(\n    (type) => () => {\n      if (type === \"text\") {\n        const data = [...textShadowList, { hiddenItem: false }];\n        setTextShadowList(data);\n        onChangeShadow(type, data);\n      }\n      if (type === \"box\") {\n        const data = [...boxShadowList, { hiddenItem: false }];\n        setBoxShadowList(data);\n        onChangeShadow(type, data);\n      }\n    },\n    [boxShadowList, onChangeShadow, textShadowList]\n  );\n\n  const onMinus = useCallback(\n    (type, i) => {\n      if (type === \"text\") {\n        const data = textShadowList.filter((item, index) => index !== i);\n        setTextShadowList(data);\n        onChangeShadow(type, data);\n      }\n      if (type === \"box\") {\n        const data = boxShadowList.filter((item, index) => index !== i);\n        setBoxShadowList(data);\n        onChangeShadow(type, data);\n      }\n    },\n    [boxShadowList, onChangeShadow, textShadowList]\n  );\n\n  const onChangeColor = useCallback(\n    (type, i, res: any) => {\n      if (type === \"box\") {\n        boxShadowList[i].color =\n          res.value &&\n          `rgba(${res.value.rgb.r}, ${res.value.rgb.g}, ${res.value.rgb.b}, ${res.value.rgb.a} )`;\n        setBoxShadowList(boxShadowList);\n        onChangeShadow(type, boxShadowList);\n      }\n      if (type === \"text\") {\n        textShadowList[i].color =\n          res.value &&\n          `rgba(${res.value.rgb.r}, ${res.value.rgb.g}, ${res.value.rgb.b}, ${res.value.rgb.a} )`;\n        setBoxShadowList(textShadowList);\n        onChangeShadow(type, textShadowList);\n      }\n    },\n    [boxShadowList, onChangeShadow, textShadowList]\n  );\n\n  const onChangeInset = useCallback(\n    (type, i, value: boolean) => {\n      if (type === \"box\") {\n        boxShadowList[i].inset = value;\n        setBoxShadowList(boxShadowList);\n        onChangeShadow(type, boxShadowList);\n      }\n    },\n    [boxShadowList, onChangeShadow]\n  );\n\n  const onChangeshiftRight = useCallback(\n    (type, i, value: any) => {\n      if (type === \"box\") {\n        boxShadowList[i].shiftRight = value;\n        setBoxShadowList(boxShadowList);\n        onChangeShadow(type, boxShadowList);\n      }\n      if (type === \"text\") {\n        textShadowList[i].shiftRight = value;\n        setTextShadowList(textShadowList);\n        onChangeShadow(type, textShadowList);\n      }\n    },\n    [boxShadowList, onChangeShadow, textShadowList]\n  );\n\n  const onChangeshiftDown = useCallback(\n    (type, i, value: any) => {\n      if (type === \"box\") {\n        boxShadowList[i].shiftDown = value;\n        setBoxShadowList(boxShadowList);\n        onChangeShadow(type, boxShadowList);\n      }\n      if (type === \"text\") {\n        textShadowList[i].shiftDown = value;\n        setTextShadowList(textShadowList);\n        onChangeShadow(type, textShadowList);\n      }\n    },\n    [boxShadowList, onChangeShadow, textShadowList]\n  );\n\n  const onChangeBlur = useCallback(\n    (type, i, value: any) => {\n      if (type === \"box\") {\n        boxShadowList[i].blur = value;\n        setBoxShadowList(boxShadowList);\n        onChangeShadow(type, boxShadowList);\n      }\n      if (type === \"text\") {\n        textShadowList[i].blur = value;\n        setTextShadowList(textShadowList);\n        onChangeShadow(type, textShadowList);\n      }\n    },\n    [boxShadowList, onChangeShadow, textShadowList]\n  );\n\n  const onChangeSpread = useCallback(\n    (type, i, value: any) => {\n      if (type === \"box\") {\n        boxShadowList[i].spread = value;\n        setBoxShadowList(boxShadowList);\n        onChangeShadow(type, boxShadowList);\n      }\n    },\n    [boxShadowList, onChangeShadow]\n  );\n\n  const onToggleShow = useCallback(\n    (index: number, type: \"text\" | \"box\") => {\n      if (type === \"text\") {\n        textShadowList[index].hiddenItem = !!!textShadowList[index].hiddenItem;\n        setTextShadowList([...textShadowList]);\n      }\n      if (type === \"box\") {\n        boxShadowList[index].hiddenItem = !!!boxShadowList[index].hiddenItem;\n        setBoxShadowList([...boxShadowList]);\n      }\n    },\n    [boxShadowList, textShadowList]\n  );\n\n  // 拖拽重新排序重置更新事件组数据\n  const onSortEnd = useCallback(\n    ({oldIndex, newIndex}, type) => {\n      let data: BoxShadow[] = [];\n      if (type === \"text\") {\n        data = [...textShadowList];\n        data = arrayMove(data, oldIndex, newIndex);\n        setTextShadowList(data);\n      }\n      if (type === \"box\") {\n        data = [...boxShadowList];\n        data = arrayMove(data, oldIndex, newIndex);\n        setBoxShadowList(data);\n      }\n      onChangeShadow(type, data);\n    },\n    [boxShadowList, onChangeShadow, textShadowList],\n  )\n\n  const renderShadow = (type: \"text\" | \"box\") => {\n    let data: BoxShadow[] = type === \"text\" ? textShadowList : boxShadowList;\n    return (\n        <ShadowListHoc\n            useDragHandle\n            data={data}\n            type={type}\n            onSortEnd={({oldIndex, newIndex}) => onSortEnd({oldIndex, newIndex}, type)}\n            onMinus={onMinus}\n            onToggleShow={onToggleShow}\n            onChangeColor={onChangeColor}\n            onChangeInset={onChangeInset}\n            onChangeshiftRight={onChangeshiftRight}\n            onChangeshiftDown={onChangeshiftDown}\n            onChangeBlur={onChangeBlur}\n            onChangeSpread={onChangeSpread}\n          />\n    );\n  };\n\n  return (\n    <>\n      <Row className={s.row}>\n        <Col span={24}>\n          <Radio.Group\n            value={shadowType}\n            className={s.tab}\n            onChange={onChangeShadowTab}\n          >\n            <Radio.Button value=\"box\">投影</Radio.Button>\n            <Radio.Button value=\"text\">文字投影</Radio.Button>\n          </Radio.Group>\n        </Col>\n      </Row>\n      <Row>\n        <Col span={24}>\n          <Button\n            size=\"small\"\n            icon={<PlusOutlined />}\n            onClick={onPlus(shadowType)}\n          />\n        </Col>\n      </Row>\n      {renderShadow(shadowType)}\n    </>\n  );\n};\n\nexport default Shadow;\n","import Select from './Select';\nexport default Select;","import React from \"react\";\nimport { Row, Col, Select as SelectItem } from \"antd\";\nimport s from \"./Select.module.less\";\n\ninterface Props {\n  label: string;\n  unit?: string;\n  optionsData: {\n    [keys: string]: any;\n  };\n  [keys: string]: any;\n}\n\nconst Select: React.FC<Props> = ({ unit, label, optionsData, ...other }) => {\n  return (\n    <Row className={s.row} gutter={4}>\n      <Col className={s.label} span={7}>\n        {label || \"\"}\n        {other.defaultValue}\n      </Col>\n      <Col span={17}>\n        <SelectItem {...other} >\n          {Object.keys(optionsData).map((key) => (\n            <SelectItem.Option key={key} value={key}>\n              {(key !== \"none\" && key !== \"hidden\") ? (\n                <div className={s.example}>\n                  <div style={{ borderTop: `4px ${key} #666` }} />\n                </div>\n              ) : null}\n              {key === \"none\" ? '无' : null}\n              {key === \"hidden\" ? '隐藏' : null}\n            </SelectItem.Option>\n          ))}\n        </SelectItem>\n      </Col>\n    </Row>\n  );\n};\n\nexport default Select;\n","import BorderCheckbox from './BorderCheckbox';\nexport default BorderCheckbox;","import React, { useCallback, useEffect, useState } from \"react\";\nimport { Row, Col } from \"antd\";\nimport s from \"./BorderCheckbox.module.less\";\nimport {\n  BorderBottomOutlined,\n  BorderLeftOutlined,\n  BorderOutlined,\n  BorderRightOutlined,\n  BorderTopOutlined,\n} from \"@ant-design/icons\";\n\ninterface Data {\n  borderTop?: boolean;\n  borderRight?: boolean;\n  borderBottom?: boolean;\n  borderLeft?: boolean;\n  border?: boolean;\n}\n\ninterface Props {\n  defaultData: Data;\n  [keys: string]: any;\n}\n\nconst BorderCheckbox: React.FC<Props> = ({\n  unit,\n  label,\n  defaultData,\n  onChange,\n  ...other\n}) => {\n  const [borderPosition, setBorderPosition] = useState<Data>({\n    borderTop: false,\n    borderRight: false,\n    borderBottom: false,\n    borderLeft: false,\n    border: false,\n  });\n\n  // const forceUpdate = useDispatch<Dispatch>().controller.forceUpdateByStateTag;\n\n  useEffect(() => {\n    if (defaultData.border === true) {\n      setBorderPosition({\n        borderTop: false,\n        borderRight: false,\n        borderBottom: false,\n        borderLeft: false,\n        border: true,\n      });\n    } else {\n      setBorderPosition({ ...defaultData });\n    }\n    \n  }, [defaultData]);\n\n  const handleBorderPosition = useCallback(\n    (\n      prop:\n        | \"borderTop\"\n        | \"borderRight\"\n        | \"borderBottom\"\n        | \"borderLeft\"\n        | \"border\"\n    ) => {\n      borderPosition[prop] = !borderPosition[prop];\n\n      if (prop !== \"border\") {\n        const {\n          borderTop,\n          borderRight,\n          borderBottom,\n          borderLeft,\n        } = borderPosition;\n        if (\n          [borderTop, borderRight, borderBottom, borderLeft].includes(false)\n        ) {\n          borderPosition.border = false;\n        } else {\n          borderPosition.border = true;\n          borderPosition.borderBottom = borderPosition.borderLeft = borderPosition.borderRight = borderPosition.borderTop = false;\n        }\n      } else {\n        if (borderPosition.border === true) {\n          borderPosition.borderBottom = borderPosition.borderLeft = borderPosition.borderRight = borderPosition.borderTop = false;\n        }\n      }\n      const result = { ...borderPosition };\n      if (onChange instanceof Function) {\n        onChange(result);\n        // forceUpdate(); // 用于强制刷新页面\n      }\n      setBorderPosition(result);\n    },\n    [borderPosition, onChange]\n  );\n\n  return (\n    <Row className={s.row} gutter={4} {...other}>\n      <Col span={24}>\n        <div className={s.menu}>\n          <div>\n            <BorderOutlined\n              onClick={() => handleBorderPosition(\"border\")}\n              className={borderPosition.border ? s.color : \"\"}\n            />\n          </div>\n          <div>\n            <BorderTopOutlined\n              className={borderPosition.borderTop ? s.color : \"\"}\n              onClick={() => handleBorderPosition(\"borderTop\")}\n            />\n          </div>\n          <div>\n            <BorderRightOutlined\n              className={borderPosition.borderRight ? s.color : \"\"}\n              onClick={() => handleBorderPosition(\"borderRight\")}\n            />\n          </div>\n          <div>\n            <BorderBottomOutlined\n              className={borderPosition.borderBottom ? s.color : \"\"}\n              onClick={() => handleBorderPosition(\"borderBottom\")}\n            />\n          </div>\n          <div>\n            <BorderLeftOutlined\n              className={borderPosition.borderLeft ? s.color : \"\"}\n              onClick={() => handleBorderPosition(\"borderLeft\")}\n            />\n          </div>\n        </div>\n      </Col>\n    </Row>\n  );\n};\n\nexport default BorderCheckbox;\n","import BorderRadius from './BorderRadius';\nexport default BorderRadius;","import React, { useCallback, useEffect, useState } from \"react\";\nimport { Row, Col } from \"antd\";\nimport s from \"./BorderRadius.module.less\";\nimport {\n  LinkOutlined,\n  RadiusBottomleftOutlined,\n  RadiusBottomrightOutlined,\n  RadiusUpleftOutlined,\n  RadiusUprightOutlined,\n} from \"@ant-design/icons\";\nimport classNames from \"classnames\";\nimport UnitInput from \"../../UnitInput\";\nimport { UnitType } from \"~/types/appData\";\n\ninterface Props {\n  defaultData?: (UnitType | undefined)[];\n  onChange?: (data: (UnitType | undefined)[]) => void;\n  unit?: string;\n}\n\nconst BorderRadius: React.FC<Props> = ({\n  unit,\n  onChange,\n  defaultData,\n  ...other\n}) => {\n  const [locked, setLocked] = useState(false);\n\n  const [topLeft, setTopLeft] = useState<UnitType>();\n  const [topRight, setTopRight] = useState<UnitType>();\n  const [bottomRight, setBottomRight] = useState<UnitType>();\n  const [bottomLeft, setBottomLeft] = useState<UnitType>();\n\n  useEffect(() => {\n    if (Array.isArray(defaultData)) {\n      setTopLeft(defaultData[0]);\n      setTopRight(defaultData[1]);\n      setBottomRight(defaultData[2]);\n      setBottomLeft(defaultData[3]);\n    }\n  }, [defaultData]);\n\n  const toggleLocked = useCallback(() => {\n    if (!locked) {\n      setTopLeft(topLeft);\n      setTopRight(topLeft);\n      setBottomRight(topLeft);\n      setBottomLeft(topLeft);\n    }\n    setLocked(!locked);\n    if (onChange instanceof Function) {\n      onChange([topLeft, topLeft, topLeft, topLeft]);\n    }\n  }, [locked, onChange, topLeft]);\n\n  const onChangeAll = useCallback((value: UnitType) => {\n    setTopLeft(value);\n    setTopRight(value);\n    setBottomRight(value);\n    setBottomLeft(value);\n  }, []);\n\n  const updateChange = useCallback((value: (UnitType | undefined)[]) => {\n    if (onChange instanceof Function) {\n      onChange(value)\n    }\n  }, [onChange])\n\n  const onChangeData = useCallback(\n    (index: number) => (value: UnitType) => {\n      if (locked) {\n        onChangeAll(value);\n        updateChange([value, value, value, value]);\n        return;\n      }\n      switch (index) {\n        case 0:\n          setTopLeft(value);\n          updateChange([value, topRight, bottomRight, bottomLeft]);\n          break;\n        case 1:\n          setTopRight(value);\n          updateChange([topLeft, value, bottomRight, bottomLeft]);\n          break;\n        case 2:\n          setBottomRight(value);\n          updateChange([topLeft, topRight, value, bottomLeft]);\n          break;\n        case 3:\n          setBottomLeft(value);\n          updateChange([topLeft, topRight, bottomRight, value]);\n          break;\n        default:\n          break;\n      }\n    },\n    [bottomLeft, bottomRight, locked, onChangeAll, topLeft, topRight, updateChange]\n  );\n\n  return (\n    <Row className={s.row}>\n      <Col span={11}>\n        <Row>\n          <Col span={4} className={classNames(s.icon, s.alignright)}>\n            <RadiusUpleftOutlined />\n            &nbsp;\n          </Col>\n          <Col span={20}>\n            <UnitInput\n              min={0}\n              span={{ wrapper: 24 }}\n              defaultValue={topLeft}\n              onChange={onChangeData(0)}\n            />\n          </Col>\n        </Row>\n        <Row>\n          <Col span={4} className={classNames(s.icon, s.alignright)}>\n            <RadiusBottomleftOutlined />\n            &nbsp;\n          </Col>\n          <Col span={20}>\n            <UnitInput\n              min={0}\n              span={{ wrapper: 24 }}\n              defaultValue={bottomLeft}\n              onChange={onChangeData(3)}\n            />\n          </Col>\n        </Row>\n      </Col>\n      <Col span={2} className={s.middle}>\n        <LinkOutlined\n          onClick={toggleLocked}\n          className={locked ? s.locked : undefined}\n        />\n      </Col>\n      <Col span={11}>\n        <Row className={s.row}>\n          <Col span={20}>\n            <UnitInput\n              min={0}\n              span={{ wrapper: 24 }}\n              defaultValue={topRight}\n              onChange={onChangeData(1)}\n            />\n          </Col>\n          <Col span={4} className={s.icon}>\n            &nbsp;\n            <RadiusUprightOutlined />\n          </Col>\n        </Row>\n        <Row className={s.row}>\n          <Col span={20}>\n            <UnitInput\n              min={0}\n              span={{ wrapper: 24 }}\n              defaultValue={bottomRight}\n              onChange={onChangeData(2)}\n            />\n          </Col>\n          <Col span={4} className={s.icon}>\n            &nbsp;\n            <RadiusBottomrightOutlined />\n          </Col>\n        </Row>\n      </Col>\n    </Row>\n  );\n};\n\nexport default BorderRadius;\n","import Border from './Border';\nexport default Border;","import { Col, Row } from \"antd\";\nimport React, { useCallback, useEffect, useState } from \"react\";\nimport Color from \"../Color\";\nimport Select from \"./Select\";\nimport s from \"./Border.module.less\";\nimport BorderCheckbox from \"./BorderCheckbox\";\nimport BorderRadius from \"./BorderRadius\";\nimport { BorderTypesOfStyleItems } from \"types/appData\";\nimport { RootState } from \"~/redux/store\";\nimport { useSelector } from \"react-redux\";\nimport UnitInput from \"../UnitInput\";\n\ninterface Props {\n  onChange: (result: BorderTypesOfStyleItems) => void;\n  defaultDate?: BorderTypesOfStyleItems;\n  unit?: string;\n}\n\nconst Border: React.FC<Props> = ({ unit, onChange, defaultDate }) => {\n  const [border, setBorder] = useState<BorderTypesOfStyleItems>({});\n  const moduleId = useSelector((state:RootState) => state.activationItem.moduleId);\n  useEffect(() => {\n    const data = defaultDate || {};\n    setBorder({...data});\n  }, [defaultDate, moduleId]);\n\n  const onChangeBorder = useCallback(\n    (type: string) => (value: any) => {\n      switch (type) {\n        case \"borderRaduis\":\n          const [\n            radiusTopLeft,\n            radiusTopRight,\n            radiusBottomRight,\n            radiusBottomLeft,\n          ] = value;\n          border.radiusTopLeft = radiusTopLeft;\n          border.radiusTopRight = radiusTopRight;\n          border.radiusBottomLeft = radiusBottomLeft;\n          border.radiusBottomRight = radiusBottomRight;\n          break;\n        case \"borderStyle\":\n        case \"borderWidth\":\n        case \"borderPosition\":\n          border[type] = value;\n          break;\n        case \"borderColor\":\n          const rgba = value.value?.rgb;\n          border.borderColor = rgba && `rgba(${rgba.r}, ${rgba.g}, ${rgba.b}, ${rgba.a})`;\n          break;\n        default:\n          break;\n      }\n      const data = { ...border };\n      setBorder(data);\n      if (onChange instanceof Function) {\n        onChange(data);\n      }\n    },\n    [border, onChange]\n  );\n\n  return (\n    <>\n      <Row className={s.row}>\n        <Col span={6}>\n          <Color\n            defaultColor={border.borderColor}\n            label=\"描边颜色\"\n            onChange={onChangeBorder(\"borderColor\")}\n            span={{\n              label: 14,\n              value: 10\n            }}\n          />\n        </Col>\n        <Col span={6} />\n        <Col span={12}>\n          <BorderCheckbox\n            onChange={onChangeBorder(\"borderPosition\")}\n            defaultData={border.borderPosition || {}}\n          />\n        </Col>\n      </Row>\n      <Row className={s.row}>\n        <Col span={12}>\n          <Select\n            onChange={onChangeBorder(\"borderStyle\")}\n            value={border.borderStyle}\n            optionsData={{\n              solid: \"solid\",\n              dotted: \"dotted\",\n              dashed: \"dashed\",\n              double: \"double\",\n              groove: \"groove\",\n              ridge: \"ridge\",\n              inset: \"inset\",\n              outset: \"outset\",\n              hidden: \"hidden\",\n              none: \"none\",\n            }}\n            label=\"描边样式\"\n          />\n        </Col>\n\n        <Col span={12}>\n          <UnitInput \n            label=\"描边宽度\"\n            min={0}\n            max={100000}\n            defaultValue={border.borderWidth as any}\n            onChange={onChangeBorder(\"borderWidth\")}\n          />\n        </Col>\n      </Row>\n      <Row className={s.row}>\n        <Col span={2}></Col>\n        <Col span={20}>\n          <BorderRadius\n            onChange={onChangeBorder(\"borderRaduis\")}\n            defaultData={[\n              border.radiusTopLeft,\n              border.radiusTopRight,\n              border.radiusBottomRight,\n              border.radiusBottomLeft,\n            ]}\n            unit={unit}\n          />\n        </Col>\n        <Col span={2}></Col>\n      </Row>\n    </>\n  );\n};\n\nexport default Border;\n","import Transfrom from './Transfrom'\nexport default Transfrom","import { Row, Col } from \"antd\";\nimport React, { useCallback, useEffect, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { RootState } from \"~/redux/store\";\nimport { UnitType } from \"~/types/appData\";\nimport NumberInput from \"../NumberInput\";\nimport UnitInput from \"../UnitInput\";\nimport s from \"./Transfrom.module.scss\";\n\ninterface DefautData {\n  scale?: number;\n  rotate?: number;\n  translateX?: UnitType;\n  translateY?: UnitType;\n  skewX?: number;\n  skewY?: number;\n}\n\ninterface Props {\n  unit?: string;\n  onChange?: (result: DefautData) => void;\n  defaultDate?: DefautData;\n}\n\nconst Transfrom: React.FC<Props> = ({ unit, defaultDate, onChange }) => {\n  const [transfrom, setTransfrom] = useState<DefautData>({});\n  const moduleId = useSelector((state: RootState) => state.activationItem.moduleId)\n\n  useEffect(() => {\n    setTransfrom({...(defaultDate || {})})\n  }, [defaultDate, moduleId])\n\n  const onChangeTransFrom = useCallback(\n    (\n      type: \"scale\" | \"rotate\" | \"translateX\" | \"translateY\" | \"skewX\" | \"skewY\"\n    ) => (value: any) => {\n      console.log(type, value)\n      transfrom[type] = value;\n      setTransfrom({...transfrom});\n      if (onChange instanceof Function) {\n        onChange({...transfrom})\n      }\n    },\n    [onChange, transfrom]\n  );\n  return (\n    <>\n      <Row className={s.row}>\n        <Col span={12}>\n          <NumberInput\n            label=\"缩放\"\n            placeholder=\"倍\"\n            unit=\"倍\"\n            min={0}\n            max={100}\n            defaultValue={defaultDate?.scale}\n            onChange={onChangeTransFrom('scale')}\n          />\n        </Col>\n        <Col span={12}>\n          <NumberInput\n            label=\"旋转\"\n            placeholder=\"度\"\n            unit=\"deg\"\n            min={-360}\n            max={360}\n            defaultValue={defaultDate?.rotate}\n            onChange={onChangeTransFrom('rotate')}\n          />\n        </Col>\n      </Row>\n      <Row className={s.row}>\n        <Col span={12}>\n          <UnitInput \n            label=\"平移X\"\n            min={-1000}\n            max={1000}\n            defaultValue={(defaultDate?.translateX)}\n            onChange={onChangeTransFrom('translateX')}\n          />\n        </Col>\n        <Col span={12}>\n          <UnitInput \n            label=\"平移Y\"\n            min={-1000}\n            max={1000}\n            defaultValue={defaultDate?.translateY}\n            onChange={onChangeTransFrom('translateY')}\n          />\n        </Col>\n      </Row>\n      <Row className={s.row}>\n        <Col span={12}>\n          <NumberInput\n            label=\"倾斜X\"\n            placeholder=\"度\"\n            unit=\"deg\"\n            min={-360}\n            max={360}\n            defaultValue={defaultDate?.skewX}\n            onChange={onChangeTransFrom('skewX')}\n          />\n        </Col>\n        <Col span={12}>\n          <NumberInput\n            label=\"倾斜Y\"\n            placeholder=\"度\"\n            unit=\"deg\"\n            min={-360}\n            max={360}\n            defaultValue={defaultDate?.skewY}\n            onChange={onChangeTransFrom('skewY')}\n          />\n        </Col>\n      </Row>\n    </>\n  );\n};\n\nexport default Transfrom;\n","import React, { useCallback } from 'react';\nimport { useSelector } from 'react-redux';\nimport { RootState } from '~/redux/store';\n\nimport { Collapse } from 'antd';\nimport Display from '../Display';\nimport Font from '../Font';\n\nimport useMergeAppData from '~/hooks/useMergeAppData';\nimport s from './StyleSheetPanel.module.scss';\nimport Shadow from '../Shadow';\nimport Border from '../Border';\nimport Transform from '../Transfrom';\nimport BackgroundGroup from '../BackgroundGroup';\n\nconst { Panel } = Collapse;\n\ninterface Props {\n    path: string;\n}\n\nconst StyleSheetPanel: React.FC<Props> = ({ path }) => {\n    const selected = useSelector((state: RootState) => state.activationItem);\n    const unit = useSelector((state: RootState) => state.pageData.unit);\n    const update = useMergeAppData();\n    const rootStyle = `style.${path}`;\n\n    const onChangeFont = useCallback(\n        (result: any) => {\n            update(result, `${rootStyle}.font`);\n        },\n        [rootStyle, update]\n    );\n\n    const onChangeDisplay = useCallback(\n        (result: any) => {\n            update(result, `${rootStyle}.display`);\n        },\n        [rootStyle, update]\n    );\n\n    const onChangeBackgroundGroup = useCallback(\n        (result: any) => {\n            update(result, `${rootStyle}.backgroundGroup`);\n        },\n        [rootStyle, update],\n    )\n\n    const onChangeShadow = useCallback(\n        (result: any) => {\n            if (result.type === 'boxShadow') {\n                update(result.values, `${rootStyle}.boxShadow`);\n            }\n            if (result.type === 'textShadow') {\n                update(result.values, `${rootStyle}.textShadow`);\n            }\n        },\n        [rootStyle, update]\n    );\n\n    const onChangeBorder = useCallback(\n        (result: any) => {\n            update(result, `${rootStyle}.border`);\n        },\n        [rootStyle, update]\n    );\n\n    const onChangeTransfrom = useCallback(\n        (result: any) => {\n            update(result, `${rootStyle}.transform`);\n        },\n        [rootStyle, update]\n    );\n\n    return (\n        <div className={s.root}>\n            {path ? (\n                <Collapse accordion bordered={false}>\n                    <Panel header=\"布局\" key=\"display\">\n                        <Display\n                            unit={unit}\n                            onChange={onChangeDisplay}\n                            defaultData={selected?.style?.[path]?.display || {}}\n                        />\n                    </Panel>\n                    <Panel header=\"文字\" key=\"font\">\n                        <Font\n                            unit={unit}\n                            onChange={onChangeFont}\n                            defaultData={selected?.style?.[path]?.font || {}}\n                        />\n                    </Panel>\n                    <Panel\n                        header=\"背景\"\n                        key=\"backgroundGroup\"\n                    >   \n                        <BackgroundGroup\n                            updateKey={`${selected.moduleId}${path}`}\n                            onChange={onChangeBackgroundGroup}\n                            defaultData={selected?.style?.[path]?.backgroundGroup || {}}\n                        />\n                    </Panel>\n                    <Panel header=\"圆角与描边\" key=\"border\">\n                        <Border\n                            unit={unit}\n                            onChange={onChangeBorder}\n                            defaultDate={selected?.style?.[path]?.border || {}}\n                        />\n                    </Panel>\n                    <Panel header=\"投影\" key=\"textShadow_boxShadow\">\n                        <Shadow\n                            unit={unit}\n                            onChange={onChangeShadow}\n                            defaultValue={{\n                                textShadowList:\n                                    selected?.style?.[path]?.textShadow,\n                                boxShadowList:\n                                    selected?.style?.[path]?.boxShadow,\n                            }}\n                        />\n                    </Panel>\n                    <Panel header=\"变换\" key=\"transform\">\n                        <Transform\n                            unit={unit}\n                            onChange={onChangeTransfrom}\n                            defaultDate={\n                                selected?.style?.[path]?.transform || {}\n                            }\n                        />\n                    </Panel>\n                </Collapse>\n            ) : null}\n        </div>\n    );\n};\n\nexport default StyleSheetPanel;\n","import StyleSheetPanel from './StyleSheetPanel';\nexport default StyleSheetPanel;","import React, { useCallback, useEffect, useMemo, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport s from './StyleController.module.less';\nimport { RootState } from '~/redux/store';\nimport StyleSheetPanel from '../StyleSheetPanel';\nimport TreeSelect from 'antd/lib/tree-select';\nimport { Col, Row } from 'antd';\nimport { AnyObjectType } from '~/types/appData';\nimport { findPath } from './helper';\nimport usePostMessage from '~/hooks/usePostMessage';\n\ninterface Props {}\n\nconst StyleController: React.FC<Props> = () => {\n    // 模板ID\n    const activationItem = useSelector(\n        (state: RootState) => state.activationItem\n    );\n    const sendMsg = usePostMessage(() => {});\n    const { moduleId, type } = activationItem;\n\n    // 获取模块样式描述清单\n    const moduleType: { [keys: string]: string }[] = useMemo(() => {\n        if (moduleId) {\n            return (\n                require(`~/modules/${type}`)?.default\n                    ?.exposeDefaultProps?.styleDescription || []\n            );\n        }\n        return [];\n    }, [moduleId, type]);\n\n    // 当前编辑路径\n    const [stylePath, setStylePath] = useState('');\n    const [path, setPath] = useState<AnyObjectType[]>();\n    const resetPath = useCallback(\n        () => {\n            const pathData = [{ title: '基础' }];\n            setPath(pathData);\n            const win = (\n                document.getElementById('wrapiframe') as HTMLIFrameElement\n            ).contentWindow;\n            sendMsg(\n                {\n                    tag: 'setCurrentEditorStylePath',\n                    value: pathData,\n                },\n                win\n            );\n            setStylePath('basic');\n        },\n        [sendMsg],\n    )\n    \n    // 重置路径\n    useEffect(() => {\n        resetPath()\n    }, [activationItem.moduleId, resetPath])\n\n    // 设置当前编辑路径\n    const onSelectStylePath = useCallback(\n        (value) => {\n            const pathData = findPath(value, moduleType).reverse();\n            setPath(pathData);\n            const win = (\n                document.getElementById('wrapiframe') as HTMLIFrameElement\n            ).contentWindow;\n            sendMsg(\n                {\n                    tag: 'setCurrentEditorStylePath',\n                    value: pathData,\n                },\n                win\n            );\n            setStylePath(value);\n        },\n        [moduleType, sendMsg]\n    );\n\n    const height = useMemo(() => window.innerHeight - 200, []);\n    return (\n        <div className={s.dashboardstylewrap}>\n            <div className={s.wrap}>\n                <div className={s.top}>\n                    <Row className={s.row}>\n                        <Col span={4}>当前编辑元素</Col>\n                        <Col span={20}>\n                            <div className={s.bar}>\n                                <div className={s.path}>\n                                    {path?.map((item, index) => (\n                                        <span key={index}>{item.title}</span>\n                                    ))}\n                                </div>\n                                <TreeSelect\n                                    style={{ width: '100%', height: '100%' }}\n                                    className={s.select}\n                                    value={stylePath}\n                                    dropdownStyle={{\n                                        maxHeight: `${height}px`,\n                                        overflow: 'auto',\n                                    }}\n                                    listHeight={height}\n                                    treeData={moduleType || []}\n                                    placeholder=\"请选择\"\n                                    treeDefaultExpandAll\n                                    onChange={onSelectStylePath}\n                                />\n                            </div>\n                        </Col>\n                    </Row>\n                </div>\n            </div>\n            <StyleSheetPanel path={stylePath} />\n        </div>\n    );\n};\n\nexport default StyleController;\n","import StyleController from './StyleController';\nexport default StyleController;","import { AnyObjectType } from \"~/types/appData\";\n\nexport function findPath(value: string, data: AnyObjectType[]):AnyObjectType[] {\n    const sel: AnyObjectType[] = [];\n    function loop(selected: string, children: any[]) {\n      for (let i = 0; i < children.length; i += 1) {\n        const item = children[i];\n        if (selected === item.value) {\n          sel.push(item);\n          return;\n        }\n        if (item.children) {\n          loop(selected, item.children);\n          if (sel.length) {\n            sel.push(item);\n            return;\n          }\n        }\n      }\n    }\n    loop(value, data);\n    return sel;\n  }","import CodeEditor from './CodeEditor';\nexport default CodeEditor;","import React, { useEffect, useRef, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Dispatch, RootState } from \"~/redux/store\";\nimport s from \"./CodeEditor.module.less\";\nimport JSONEditor from \"jsoneditor\";\nimport \"jsoneditor/dist/jsoneditor.css\";\nimport { useCallback } from \"react\";\nimport { CopyToClipboard } from \"react-copy-to-clipboard\";\nimport useLocalStorage from \"~/hooks/useLocalStorage\";\nimport { message } from \"antd\";\nimport { CopyOutlined } from \"@ant-design/icons\";\nimport Radio from \"antd/lib/radio\";\nimport Button from \"antd/lib/button\";\nimport { AppDataLayoutItemTypes } from \"~/types/appData\";\n\ninterface Props {}\n\nconst Codeeditor: React.FC<Props> = () => {\n  const activationItem = useSelector(\n    (state: RootState) => state.activationItem\n  );\n  const appData = useSelector((state: RootState) => state.appData);\n  const dispatch = useDispatch<Dispatch>();\n  const [jsonData, setJsonData] = useState<AppDataLayoutItemTypes>();\n  const [jsonMode, setJsonMode] = useState<\"view\" | \"code\">(\"view\");\n\n  useEffect(() => {\n    setJsonData({ ...activationItem });\n  }, [activationItem]);\n\n  const [, setLocalStorage] = useLocalStorage(\"appData\", null);\n  const jsoneditor = useRef<JSONEditor>();\n  const container = useRef<any>();\n\n  const onsubmit = useCallback(() => {\n    try {\n      var json = jsoneditor.current?.get();\n      if (\n        json &&\n        activationItem.moduleId === json.moduleId &&\n        activationItem.moduleId === json.layout?.i\n      ) {\n        setJsonData(json);\n        dispatch.activationItem.updateActivationItem(json);\n        const operateData = [...appData].map((item) => {\n          if (item.moduleId === json.moduleId) {\n            return json;\n          }\n          return item;\n        });\n        dispatch.appData.updateAppData(operateData);\n        setLocalStorage(operateData);\n        dispatch.controller.forceUpdateByStateTag();\n      }\n    } catch (e) {\n      return;\n    }\n  }, [activationItem.moduleId, appData, dispatch.activationItem, dispatch.appData, dispatch.controller, setLocalStorage]);\n\n  useEffect(() => {\n    if (container.current && jsonData) {\n      jsoneditor.current = new JSONEditor(container.current, {\n        mode: jsonMode,\n        mainMenuBar: false,\n      });\n      jsoneditor.current.set(jsonData);\n    }\n\n    return () => {\n      if (jsoneditor.current) {\n        jsoneditor.current.destroy();\n      }\n    };\n  }, [jsonData, jsonMode]);\n\n  const onChangeJsonMode = useCallback((e) => {\n    jsoneditor.current?.setMode(e.target.value);\n    setJsonMode(e.target.value);\n  }, []);\n  return (\n    <>\n      <div className={s.toolbar}>\n        <div className={s.modeid}>{activationItem.moduleId}</div>\n        <div>\n          &nbsp;\n          <CopyToClipboard\n            text={JSON.stringify(activationItem)}\n            onCopy={() => message.info(\"已复制到剪切板\")}\n          >\n            <Button size=\"small\" icon={<CopyOutlined alt=\"复制到剪切板\" />}>\n              复制\n            </Button>\n          </CopyToClipboard>\n          &nbsp;\n          <Radio.Group\n            value={jsonMode}\n            size=\"small\"\n            onChange={onChangeJsonMode}\n          >\n            <Radio.Button value=\"view\">预览</Radio.Button>\n            <Radio.Button value=\"code\">编辑</Radio.Button>\n          </Radio.Group>\n          &nbsp;\n          {jsonMode === \"code\" ? (\n            <Button\n              size=\"small\"\n              type=\"primary\"\n              onClick={onsubmit}\n              icon={<CopyOutlined alt=\"复制到剪切板\" />}\n            >\n              保存\n            </Button>\n          ) : null}\n          &nbsp;\n        </div>\n      </div>\n      <div className={s.wrap} ref={container} />\n    </>\n  );\n};\n\nexport default Codeeditor;\n","import React, { useCallback, useState } from 'react';\nimport ConfigurationController from '~/components/MiniDashboard/ConfigurationController';\nimport s from './Dashboard.module.less';\nimport { Menu, Select, Tooltip, Modal, Row, Col, Input, Button } from 'antd';\nimport {\n    ClusterOutlined,\n    CodeOutlined,\n    CopyOutlined,\n    DeleteOutlined,\n    FormatPainterOutlined,\n    ToolOutlined,\n} from '@ant-design/icons';\nimport reject from 'lodash/reject';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { RootState, Dispatch } from '~/redux/store';\nimport StyleController from '../StyleController';\nimport usePostMessage from '~/hooks/usePostMessage';\nimport CodeEditor from '../CodeEditor';\nimport { v4 as uuidv4 } from 'uuid';\nimport cloneDeep from 'lodash/cloneDeep';\nimport useKeyDown from '~/hooks/useKeyDown';\nimport RunningTimesModal from '../RunningTimesModal';\n\nconst { confirm } = Modal;\ninterface Props {}\n\nconst Dashboard: React.FC<Props> = () => {\n    // 复制模块\n    const [showCopyedModal, setShowCopyedModal] = useState(false);\n    // 复制模块名称\n    const [newModalName, setNewModalName] = useState<string>();\n\n    const [showRunningTimes, setShowRunningTimes] = useState(false);\n    const runningTimes = useSelector((state: RootState) => state.runningTimes);\n\n    // appdata\n    const appData = useSelector((state: RootState) => state.appData);\n\n    // 模板ID\n    const moduleId = useSelector(\n        (state: RootState) => state.activationItem.moduleId\n    );\n\n    const activationItem = useSelector(\n        (state: RootState) => state.activationItem\n    );\n\n    const updateActivationItem = useDispatch<Dispatch>().activationItem\n        .updateActivationItem;\n    const updateAppData = useDispatch<Dispatch>().appData.updateAppData;\n    const removeActivationItem = useDispatch<Dispatch>().activationItem\n        .removeActivationItem;\n\n    // 样式与设置菜单面板\n    const [mainTag, setMainTag] = useState('config');\n    const onSelectMainTag = useCallback((e) => {\n        setMainTag(e.key);\n    }, []);\n\n    const sendMessage = usePostMessage(() => {});\n    // 收发处理，子窗口onload时向子窗口发送信息, 通知当前正处于编辑模式下，\n\n    // 重置当前被选择项\n    const onChangeSelect = useCallback(\n        (e) => {\n            if (activationItem.moduleId === e) return;\n            for (let index = 0; index < appData.length; index++) {\n                const element = appData[index];\n                if (element.moduleId === e) {\n                    const value = { ...element };\n                    updateActivationItem(value);\n                    const win = (document.getElementById(\n                        'wrapiframe'\n                    ) as HTMLIFrameElement).contentWindow;\n                    if (win) {\n                        sendMessage(\n                            { tag: 'id', value: element.moduleId },\n                            win\n                        );\n                    }\n                    break;\n                }\n            }\n        },\n        [activationItem.moduleId, appData, sendMessage, updateActivationItem]\n    );\n\n    // =====================================模块删除=======================================//\n    const [isDeleteComp, setIsDeleteComp] = useState(false);\n\n    const delModule = useCallback(() => {\n        const optAppData = reject([...appData], { moduleId });\n        const win = (document.getElementById('wrapiframe') as HTMLIFrameElement)\n            .contentWindow;\n        updateAppData(optAppData);\n        removeActivationItem();\n        sendMessage(\n            {\n                tag: 'updateAppData',\n                value: optAppData,\n            },\n            win\n        );\n        console.log(4)\n        sendMessage(\n            {\n                tag: 'removeActivationItem',\n                value: undefined,\n            },\n            win\n        );\n        setIsDeleteComp(false);\n    }, [appData, moduleId, removeActivationItem, sendMessage, updateAppData]);\n\n    const confirmModal = useCallback(() => {\n        if (isDeleteComp) return;\n        setIsDeleteComp(true);\n        confirm({\n            content: (\n                <div>\n                    <h3>确定删除</h3>\n                    <br />\n                    模块名称：{activationItem.moduleName}\n                    <br />\n                    Id: {activationItem.moduleId}\n                    <br />\n                    <span className={s.warn}>当前模块将被移除，请手动清除其他模块事件中引用的当前模块方法。</span>\n                </div>\n            ),\n            okText: '确定',\n            cancelText: '取消',\n            onCancel: () => setIsDeleteComp(false),\n            onOk: delModule,\n        });\n    }, [\n        isDeleteComp,\n        activationItem.moduleName,\n        activationItem.moduleId,\n        delModule,\n    ]);\n\n    // 模块删除快捷键\n    // key deletd\n    useKeyDown((event) => {\n        if (!isDeleteComp) {\n            event.preventDefault();\n            confirmModal();\n        }\n    }, 'Delete');\n\n    // =====================================模块复制=======================================//\n    // copyData\n    const beforCopyModule = useCallback(() => {\n        setNewModalName(`${activationItem.moduleName} 拷贝`);\n        setShowCopyedModal(true);\n    }, [activationItem.moduleName]);\n\n    // 初始化或，取消复制弹窗\n    const initCopyModule = useCallback(() => {\n        setShowCopyedModal(false);\n        setNewModalName(undefined);\n    }, []);\n\n    // 方法，复制当前选中的组件\n    const copyModule = useCallback(() => {\n        // 准备创建\n        const oprateActivationItem = cloneDeep(activationItem);\n        const copyAppData = cloneDeep(appData);\n        const moduleId = uuidv4();\n        oprateActivationItem.moduleId = moduleId;\n        oprateActivationItem.layout!.i = moduleId;\n        oprateActivationItem.moduleName =\n            newModalName || `${activationItem.moduleName} 拷贝`;\n        // 模块位置\n        if (copyAppData.length > 1) {\n            copyAppData.sort((a, b) => (b.layout?.y || 0) - (a.layout?.y || 0));\n        }\n        const layoutY = copyAppData[0].layout?.y || 0;\n        const layoutH = copyAppData[0].layout?.h || 0;\n        oprateActivationItem.layout!.y = layoutY + layoutH;\n        // 复制模块,更新当前模块到全局并设为当前被选择模块\n        updateAppData([...appData, oprateActivationItem]);\n        updateActivationItem(oprateActivationItem);\n        // 初始化复制窗口\n        initCopyModule();\n    }, [\n        activationItem,\n        appData,\n        newModalName,\n        updateAppData,\n        updateActivationItem,\n        initCopyModule,\n    ]);\n\n    // 处理键盘事件\n    // 模拟模块复制\n    // useKeyDown(beforCopyModule, 'c', 'ctrlKey');\n\n    // // 确认复制模块\n    useKeyDown((event) => {\n        if (showCopyedModal) {\n            event.preventDefault();\n            copyModule();\n        }\n    }, 'Enter');\n\n    return (\n        <>\n            <div\n                className={s.root}\n                style={{ height: `${window.innerHeight - 80}px` }}\n            >\n                <div className={s.headtab}>\n                    <div className={s.moduleselect}>\n                        <Select\n                            onChange={onChangeSelect}\n                            className={s.select}\n                            value={moduleId}\n                            showSearch\n                            placeholder=\"请选择编辑模块\"\n                            optionFilterProp=\"children\"\n                            filterOption={\n                                (input, option) => {\n                                    const str = option?.children\n                                        .join('')\n                                        .toLowerCase();\n                                    if (str.indexOf(input) !== -1) {\n                                        return true;\n                                    }\n                                    return false;\n                                }\n                                // option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\n                            }\n                        >\n                            {appData.map((item) => (\n                                <Select.Option\n                                    value={item.moduleId}\n                                    key={item.moduleId}\n                                >\n                                    {item.moduleName || '(未标题)'}-{item.type}\n                                </Select.Option>\n                            ))}\n                        </Select>\n                    </div>\n\n                    <Menu\n                        onClick={() => setMainTag('config')}\n                        onSelect={onSelectMainTag}\n                        selectedKeys={[mainTag]}\n                        mode=\"horizontal\"\n                        className={s.contentmenu}\n                    >\n                        <Menu.Item key=\"config\" icon={<ToolOutlined />}>\n                            设置\n                        </Menu.Item>\n                        <Menu.Item key=\"style\" icon={<FormatPainterOutlined />}>\n                            样式\n                        </Menu.Item>\n                        <Menu.Item key=\"code\" icon={<CodeOutlined />}>\n                            code\n                        </Menu.Item>\n                    </Menu>\n                    <div className={s.info}>\n                        <Tooltip\n                            placement=\"bottomRight\"\n                            title=\"查看全局发布变量\"\n                        >\n                            <ClusterOutlined\n                                className={s.delete}\n                                onClick={() => setShowRunningTimes(true)}\n                            />\n                        </Tooltip>\n                    </div>\n                    <div className={s.info}>\n                        <Tooltip\n                            placement=\"bottomRight\"\n                            title={\n                                <div className={s.tips}>\n                                    <h3>复制为新模块</h3>\n                                    当前模块信息\n                                    <br />\n                                    模块：{activationItem.moduleName}\n                                    <br />\n                                    类型：{activationItem.type}\n                                    <br />\n                                    Id：{activationItem.moduleId}\n                                </div>\n                            }\n                        >\n                            <CopyOutlined\n                                alt=\"复制模块\"\n                                onClick={beforCopyModule}\n                            />\n                        </Tooltip>\n                    </div>\n                    <div>\n                        <Tooltip\n                            placement=\"bottomRight\"\n                            title={`删除 ${\n                                activationItem.moduleName ||\n                                activationItem.moduleId\n                            }`}\n                        >\n                            <DeleteOutlined\n                                className={s.delete}\n                                onClick={confirmModal}\n                            />\n                        </Tooltip>\n                    </div>\n                </div>\n                <div\n                    className={s.controllerwrap}\n                    style={{ display: mainTag === 'style' ? 'block' : 'none' }}\n                >\n                    <StyleController />\n                </div>\n                <div\n                    className={s.controllerwrap}\n                    style={{ display: mainTag === 'config' ? 'block' : 'none' }}\n                >\n                    <ConfigurationController />\n                </div>\n                <div\n                    className={s.controllerwrap}\n                    style={{ display: mainTag === 'code' ? 'block' : 'none' }}\n                >\n                    <CodeEditor />\n                </div>\n            </div>\n            <Modal\n                title={`复制${activationItem?.moduleName || ''}(${\n                    activationItem?.type || ''\n                })模块`}\n                visible={!!showCopyedModal}\n                footer={null}\n                onCancel={initCopyModule}\n            >\n                <Row gutter={[16, 16]}>\n                    <Col span={3}></Col>\n                    <Col span={15}>\n                        <Input\n                            type=\"text\"\n                            value={newModalName as any}\n                            onChange={(e) =>\n                                setNewModalName(e.target.value || undefined)\n                            }\n                            placeholder={`请输入${\n                                activationItem?.type || ''\n                            }模块的别名`}\n                        />\n                    </Col>\n                    <Col span={6}>\n                        <Button type=\"primary\" onClick={copyModule}>\n                            确定\n                        </Button>\n                    </Col>\n                </Row>\n                <br />\n            </Modal>\n            <RunningTimesModal\n                visible={showRunningTimes}\n                data={runningTimes}\n                onCancel={() => setShowRunningTimes(false)}\n            />\n        </>\n    );\n};\n\nexport default Dashboard;\n","import Dashboard from './Dashboard';\nexport default Dashboard;"],"sourceRoot":""}