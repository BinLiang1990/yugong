{"version":3,"sources":["webpack://node_modules/antd/es/style/color/bezierEasing.less","webpack://node_modules/antd/es/style/mixins/reset.less","webpack://node_modules/antd/es/switch/style/index.less","webpack://node_modules/antd/es/switch/style/rtl.less"],"names":[],"mappings":"AAAC,YCIC,QAAA,CACA,SAAA,CACA,qBAAA,CACA,cAAA,CACA,yBAAA,CACA,kBAAA,CACA,eAAA,CACA,2CAAA,CAAA,mCAAA,CCGY,iBAAA,CACJ,oBAAA,CACP,6BAAA,CAAA,qBAAA,CACA,cAAA,CACC,WAAA,CACA,gBAAA,CAA+B,qBAAA,CAExB,gCAAA,CAEN,QAAA,CAAa,mBAAA,CACZ,cAAA,CAEH,0BAAA,CAAA,kBAAA,CAEQ,wBAAA,CAAA,qBAAA,CAAA,oBAAA,CAAA,gBAEX,CAFiC,kBAAc,SAAA,CAG3C,2CAAA,CAAA,mCAGJ,CAFyC,0BAGnC,+CAAA,CAAA,uCAEN,CAGE,wBAAoB,uBAAA,CAAA,eAAtB,CAGK,oBACG,wBADR,CAGQ,yCAA8B,kBAAA,CAEtB,UAAhB,CAFQ,6CAOL,uBAAA,CAAA,eAAA,CAAwB,kBAA3B,CAG6B,kBAAc,aAAA,CAAoB,mBAAA,CAG9D,UAAA,CAAgC,cAAA,CAGhB,6BAAA,CAAA,qBAFjB,CAGuC,sCAAwB,mBAA/D,CAMwB,mBAEd,OAAA,CACH,QAAA,CACH,UAAA,CAA6B,WAFjC,CAOO,6CARM,iBAAA,CAKD,sCAAA,CAAA,8BAQZ,CALO,0BAGJ,KAAA,CAAc,OAAA,CAAgB,QAAA,CACnB,MAAA,CAAe,qBAAA,CACT,iBAAA,CACP,+CAAA,CAAA,uCAAA,CAMD,UAPZ,CAOsC,uCAEtC,sBANA,CAQgC,uEAKR,UAAA,CAClB,MAVN,CF1FC,0FE2GS,OAAA,CAAkB,SAb5B,CAgBkB,yBAAqB,iBAAA,CAC7B,OAAA,CAIT,qBAAA,CACG,kBAhBJ,CAmBC,6CAA+B,aAhBhC,CAmBY,kBAAc,cAAA,CACM,WAAA,CAEN,gBAjB1B,CAcY,oCAIqD,mBAAA,CAIvC,cAlB1B,CAUY,qCAUmB,UAAA,CAGR,WAnBvB,CAMY,2CAeO,SAAA,CAGiB,aApBpC,CFxHC,uDE8IkE,mBAnBnE,CF3HC,wDEmJA,sBArBD,CF9HC,gBGOC,aD0HF,CFjIC,kCGUG,mBD0HJ,CFpIC,mCGcG,SAAA,CACA,SDyHJ,CCtHE,+EAEI,OAAA,CACA,SDuHN,CF5IC,kGG0BO,UAAA,CACA,MDqHR,CFhJC,qDGkCK,mBDiHN,CFnJC,sDGsCK,uBDgHN,CFtJC,uEG6CO,uBD4GR","file":"9.f3fbbb0a.chunk.css","sourcesContent":["/* stylelint-disable */\n.bezierEasingMixin() {\n@functions: ~`(function() {\n  var NEWTON_ITERATIONS = 4;\n  var NEWTON_MIN_SLOPE = 0.001;\n  var SUBDIVISION_PRECISION = 0.0000001;\n  var SUBDIVISION_MAX_ITERATIONS = 10;\n\n  var kSplineTableSize = 11;\n  var kSampleStepSize = 1.0 / (kSplineTableSize - 1.0);\n\n  var float32ArraySupported = typeof Float32Array === 'function';\n\n  function A (aA1, aA2) { return 1.0 - 3.0 * aA2 + 3.0 * aA1; }\n  function B (aA1, aA2) { return 3.0 * aA2 - 6.0 * aA1; }\n  function C (aA1)      { return 3.0 * aA1; }\n\n  // Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\n  function calcBezier (aT, aA1, aA2) { return ((A(aA1, aA2) * aT + B(aA1, aA2)) * aT + C(aA1)) * aT; }\n\n  // Returns dx/dt given t, x1, and x2, or dy/dt given t, y1, and y2.\n  function getSlope (aT, aA1, aA2) { return 3.0 * A(aA1, aA2) * aT * aT + 2.0 * B(aA1, aA2) * aT + C(aA1); }\n\n  function binarySubdivide (aX, aA, aB, mX1, mX2) {\n    var currentX, currentT, i = 0;\n    do {\n      currentT = aA + (aB - aA) / 2.0;\n      currentX = calcBezier(currentT, mX1, mX2) - aX;\n      if (currentX > 0.0) {\n        aB = currentT;\n      } else {\n        aA = currentT;\n      }\n    } while (Math.abs(currentX) > SUBDIVISION_PRECISION && ++i < SUBDIVISION_MAX_ITERATIONS);\n    return currentT;\n  }\n\n  function newtonRaphsonIterate (aX, aGuessT, mX1, mX2) {\n   for (var i = 0; i < NEWTON_ITERATIONS; ++i) {\n     var currentSlope = getSlope(aGuessT, mX1, mX2);\n     if (currentSlope === 0.0) {\n       return aGuessT;\n     }\n     var currentX = calcBezier(aGuessT, mX1, mX2) - aX;\n     aGuessT -= currentX / currentSlope;\n   }\n   return aGuessT;\n  }\n\n  var BezierEasing = function (mX1, mY1, mX2, mY2) {\n    if (!(0 <= mX1 && mX1 <= 1 && 0 <= mX2 && mX2 <= 1)) {\n      throw new Error('bezier x values must be in [0, 1] range');\n    }\n\n    // Precompute samples table\n    var sampleValues = float32ArraySupported ? new Float32Array(kSplineTableSize) : new Array(kSplineTableSize);\n    if (mX1 !== mY1 || mX2 !== mY2) {\n      for (var i = 0; i < kSplineTableSize; ++i) {\n        sampleValues[i] = calcBezier(i * kSampleStepSize, mX1, mX2);\n      }\n    }\n\n    function getTForX (aX) {\n      var intervalStart = 0.0;\n      var currentSample = 1;\n      var lastSample = kSplineTableSize - 1;\n\n      for (; currentSample !== lastSample && sampleValues[currentSample] <= aX; ++currentSample) {\n        intervalStart += kSampleStepSize;\n      }\n      --currentSample;\n\n      // Interpolate to provide an initial guess for t\n      var dist = (aX - sampleValues[currentSample]) / (sampleValues[currentSample + 1] - sampleValues[currentSample]);\n      var guessForT = intervalStart + dist * kSampleStepSize;\n\n      var initialSlope = getSlope(guessForT, mX1, mX2);\n      if (initialSlope >= NEWTON_MIN_SLOPE) {\n        return newtonRaphsonIterate(aX, guessForT, mX1, mX2);\n      } else if (initialSlope === 0.0) {\n        return guessForT;\n      } else {\n        return binarySubdivide(aX, intervalStart, intervalStart + kSampleStepSize, mX1, mX2);\n      }\n    }\n\n    return function BezierEasing (x) {\n      if (mX1 === mY1 && mX2 === mY2) {\n        return x; // linear\n      }\n      // Because JavaScript number are imprecise, we should guarantee the extremes are right.\n      if (x === 0) {\n        return 0;\n      }\n      if (x === 1) {\n        return 1;\n      }\n      return calcBezier(getTForX(x), mY1, mY2);\n    };\n  };\n\n  this.colorEasing = BezierEasing(0.26, 0.09, 0.37, 0.18);\n  // less 3 requires a return\n  return '';\n})()`;\n}\n// It is hacky way to make this function will be compiled preferentially by less\n// resolve error: `ReferenceError: colorPalette is not defined`\n// https://github.com/ant-design/ant-motion/issues/44\n.bezierEasingMixin();\n","@import '../themes/index';\n\n.reset-component() {\n  box-sizing: border-box;\n  margin: 0;\n  padding: 0;\n  color: @text-color;\n  font-size: @font-size-base;\n  font-variant: @font-variant-base;\n  line-height: @line-height-base;\n  list-style: none;\n  font-feature-settings: @font-feature-settings-base;\n}\n","@import '../../style/themes/index';\n@import '../../style/mixins/index';\n\n@switch-prefix-cls: ~'@{ant-prefix}-switch';\n@switch-duration: 0.2s;\n\n@switch-pin-size: @switch-height - 4px;\n@switch-sm-pin-size: @switch-sm-height - 4px;\n\n.@{switch-prefix-cls} {\n  .reset-component();\n\n  position: relative;\n  display: inline-block;\n  box-sizing: border-box;\n  min-width: @switch-min-width;\n  height: @switch-height;\n  line-height: @switch-height;\n  vertical-align: middle;\n  background-color: @disabled-color;\n  border: 0;\n  border-radius: 100px;\n  cursor: pointer;\n  transition: all @switch-duration;\n  user-select: none;\n\n  &:focus {\n    outline: 0;\n    box-shadow: 0 0 0 2px fade(@disabled-color, 10%);\n  }\n\n  &-checked:focus {\n    box-shadow: 0 0 0 2px fade(@switch-color, 20%);\n  }\n\n  &:focus:hover {\n    box-shadow: none;\n  }\n\n  &-checked {\n    background-color: @switch-color;\n  }\n\n  &-loading,\n  &-disabled {\n    cursor: not-allowed;\n    opacity: @switch-disabled-opacity;\n    * {\n      box-shadow: none;\n      cursor: not-allowed;\n    }\n  }\n\n  // ========================= Inner ==========================\n  &-inner {\n    display: block;\n    margin: 0 @switch-inner-margin-min 0 @switch-inner-margin-max;\n    color: @text-color-inverse;\n    font-size: @font-size-sm;\n    transition: margin @switch-duration;\n  }\n\n  &-checked &-inner {\n    margin: 0 @switch-inner-margin-max 0 @switch-inner-margin-min;\n  }\n\n  // ========================= Handle =========================\n  &-handle {\n    position: absolute;\n    top: @switch-padding;\n    left: @switch-padding;\n    width: @switch-pin-size;\n    height: @switch-pin-size;\n    transition: all @switch-duration ease-in-out;\n\n    &::before {\n      position: absolute;\n      top: 0;\n      right: 0;\n      bottom: 0;\n      left: 0;\n      background-color: @switch-bg;\n      border-radius: (@switch-pin-size / 2);\n      box-shadow: 0 2px 4px 0 @switch-shadow-color;\n      transition: all @switch-duration ease-in-out;\n      content: '';\n    }\n  }\n\n  &-checked &-handle {\n    left: calc(100% - @switch-pin-size - @switch-padding);\n  }\n\n  &:not(&-disabled):active {\n    .@{switch-prefix-cls}-handle::before {\n      right: -30%;\n      left: 0;\n    }\n\n    &.@{switch-prefix-cls}-checked {\n      .@{switch-prefix-cls}-handle::before {\n        right: 0;\n        left: -30%;\n      }\n    }\n  }\n\n  // ======================== Loading =========================\n  &-loading-icon {\n    position: relative;\n    top: ((@switch-pin-size - @font-size-base) / 2);\n    color: rgba(0, 0, 0, 0.65);\n    vertical-align: top;\n  }\n\n  &-checked &-loading-icon {\n    color: @switch-color;\n  }\n\n  // ========================== Size ==========================\n  &-small {\n    min-width: @switch-sm-min-width;\n    height: @switch-sm-height;\n    line-height: @switch-sm-height;\n\n    .@{switch-prefix-cls}-inner {\n      margin: 0 @switch-sm-inner-margin-min 0 @switch-sm-inner-margin-max;\n      font-size: @font-size-sm;\n    }\n\n    .@{switch-prefix-cls}-handle {\n      width: @switch-sm-pin-size;\n      height: @switch-sm-pin-size;\n    }\n\n    .@{switch-prefix-cls}-loading-icon {\n      top: ((@switch-sm-pin-size - 9px) / 2);\n      font-size: 9px;\n    }\n\n    &.@{switch-prefix-cls}-checked {\n      .@{switch-prefix-cls}-inner {\n        margin: 0 @switch-sm-inner-margin-max 0 @switch-sm-inner-margin-min;\n      }\n\n      .@{switch-prefix-cls}-handle {\n        left: calc(100% - @switch-sm-pin-size - @switch-padding);\n      }\n    }\n  }\n}\n\n@import './rtl';\n","@import '../../style/themes/index';\n@import '../../style/mixins/index';\n@import './index';\n\n@switch-prefix-cls: ~'@{ant-prefix}-switch';\n\n.@{switch-prefix-cls}-rtl {\n  direction: rtl;\n\n  .@{switch-prefix-cls}-inner {\n    margin: 0 @switch-inner-margin-max 0 @switch-inner-margin-min;\n  }\n\n  .@{switch-prefix-cls}-handle {\n    right: @switch-padding;\n    left: auto;\n  }\n\n  &:not(&-disabled):active {\n    .@{switch-prefix-cls}-handle::before {\n      right: 0;\n      left: -30%;\n    }\n\n    &.@{switch-prefix-cls}-checked {\n      .@{switch-prefix-cls}-handle::before {\n        right: -30%;\n        left: 0;\n      }\n    }\n  }\n\n  &.@{switch-prefix-cls}-checked {\n    .@{switch-prefix-cls}-inner {\n      margin: 0 @switch-inner-margin-min 0 @switch-inner-margin-max;\n    }\n\n    .@{switch-prefix-cls}-handle {\n      right: calc(100% - @switch-pin-size - @switch-padding);\n    }\n  }\n\n  &.@{switch-prefix-cls}-small {\n    &.@{switch-prefix-cls}-checked {\n      .@{switch-prefix-cls}-handle {\n        right: calc(100% - @switch-sm-pin-size - @switch-padding);\n      }\n    }\n  }\n}\n"]}